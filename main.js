!function(){"use strict";function e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function t(t){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?e(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n=t.host,r=t.authorization;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._host=n,this._headers={authorization:r},this.userId=void 0}var n,o;return n=e,o=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("error: ".concat(e.status,", ").concat(e.statusText))}},{key:"_handleError",value:function(e){console.log(e)}},{key:"getUserInfo",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"me";return fetch("".concat(this._host,"/users/").concat(t),{headers:this._headers}).then(this._handleResponse).then((function(t){return e.userId=t._id,t})).catch(this._handleError)}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar"),{method:"PATCH",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({avatar:e})}).then(this._handleResponse).catch(this._handleError)}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._headers}).then(this._handleResponse).catch(this._handleError)}},{key:"updateUser",value:function(e){var n=e.name,r=e.about;return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:n,about:r})}).then(this._handleResponse).catch(this._handleError)}},{key:"addCard",value:function(e){var n=e.name,r=e.link;return fetch("".concat(this._host,"/cards"),{method:"POST",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:n,link:r})}).then(this._handleResponse).catch(this._handleError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._host,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._host,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse).catch(this._handleError)}}],o&&r(n.prototype,o),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n,r,o){var i=t.name,a=t.link,c=t.likes,u=t.liked,s=o.addLike,l=o.removeLike,f=o.deleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=i,this._link=a,this._likeCount=c.length,this._isliked=u,this._cardSelector=n.cardSelector,this._cardTemplateSelector=n.cardTemplateSelector,this._cardTitleSelector=n.cardTitleSelector,this._cardImageSelector=n.cardImageSelector,this._cardLikeSelector=n.cardLikeSelector,this._cardLikesCounterSelector=n.cardLikeCounterSelector,this._cardDeleteSelector=n.cardDeleteSelector,this._handleLike=this._handleLikeClick.bind(this),this._handleDelete=this._handleCardDelete.bind(this),this._handlePicture=n.openPicture,this._confirm=r,this._addLikeApi=s,this._removeLikeApi=l,this._deleteCardApi=f,this._activeLikeButtonClass=n.activeLikeButtonClass}var t,n;return t=e,n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(this._cardSelector).cloneNode(!0)}},{key:"_handleCardDelete",value:function(){var e=this;this._confirm((function(){e._element.remove(),e._element=null,e._deleteCardApi()}))}},{key:"_handleLikeClick",value:function(){var e=this._element.querySelector(this._cardLikeSelector);this._isliked?(this._isliked=!1,this._likeCount--,e.classList.remove(this._activeLikeButtonClass),this._element.querySelector(this._cardLikesCounterSelector).textContent="".concat(this._likeCount),this._removeLikeApi()):(this._isliked=!0,this._likeCount++,e.classList.add(this._activeLikeButtonClass),this._element.querySelector(this._cardLikesCounterSelector).textContent="".concat(this._likeCount),this._addLikeApi())}},{key:"_addCardEvents",value:function(e){var t=this._element.querySelector(this._cardImageSelector),n=this._element.querySelector(this._cardLikeSelector),r=this._element.querySelector(this._cardDeleteSelector);e?r.addEventListener("click",this._handleDelete):r.remove(),t.addEventListener("click",this._handlePicture),n.addEventListener("click",this._handleLike)}},{key:"generateCard",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._element=this._getTemplate(),this._addCardEvents(e),this._element.querySelector(this._cardTitleSelector).textContent=this._name,this._element.querySelector(this._cardLikesCounterSelector).textContent=this._likeCount,this._isliked&&this._element.querySelector(this._cardLikeSelector).classList.add(this._activeLikeButtonClass);var t=this._element.querySelector(this._cardImageSelector);return t.src=this._link,t.alt=this._name,this._element}}],n&&i(t.prototype,n),e}(),c=a,u={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_error",errorClass:"form__input-error_visible"},s="popup_visible",l={cardSelector:".card",cardTemplateSelector:".card__template",cardTitleSelector:".card__title",cardImageSelector:".card__image",cardLikeSelector:".card__like-button",cardLikeCounterSelector:".card__like-counter",cardDeleteSelector:".card__delete-button",activeLikeButtonClass:"card__like-button_active"},f={host:"MISSING_ENV_VAR".HOST,token:"MISSING_ENV_VAR".TOKEN};function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),d(this,"_handleEscapeClose",(function(e){"Escape"===e.key&&n.close()})),d(this,"_handleOverlayClose",(function(e){e.target.classList.contains(s)&&n.close()})),this._element=document.querySelector(t),this._closeButton=this._element.querySelector(".popup__close-button"),this._handleCloseButton=function(){return n.close()}}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add(s),this.setEventListeners()}},{key:"close",value:function(){this._element.classList.remove(s),this.removeEventListeners()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this._handleCloseButton),this._element.addEventListener("click",this._handleOverlayClose),document.addEventListener("keydown",this._handleEscapeClose)}},{key:"removeEventListeners",value:function(){this._closeButton.removeEventListener("click",this._handleCloseButton),this._element.removeEventListener("click",this._handleOverlayClose),document.removeEventListener("keydown",this._handleEscapeClose)}}])&&h(t.prototype,n),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function v(e,t){return v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},v(e,t)}function m(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return b(e)}function b(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function S(e,t,n){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},S(e,t,n||e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}function g(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=k(t);if(n){var o=k(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return m(this,e)});function o(e,t){var n,i,a,c,s,l=t.handleSubmit,f=t.resetValidation;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),g(b(s=r.call(this,e)),"_setInputValues",(function(e){for(var t=function(){var e,t,o=(e=r[n],t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1],c=s._inputs.find((function(e){return e.name===i}));void 0!==c&&(c.value=a)},n=0,r=Object.entries(e);n<r.length;n++)t()})),g(b(s),"_getInputValues",(function(){var e={};return s._inputs.forEach((function(t){e[t.name]=t.value})),e})),g(b(s),"open",(function(e){s.setEventListeners(),s._setInputValues(e),S((n=b(s),k(o.prototype)),"open",n).call(n)})),g(b(s),"close",(function(){s.removeEventListeners(),s._resetValidation(),S((i=b(s),k(o.prototype)),"close",i).call(i),s._form.reset()})),g(b(s),"setEventListeners",(function(){s._form.addEventListener("submit",s._handleSubmit),S((a=b(s),k(o.prototype)),"setEventListeners",a).call(a)})),g(b(s),"removeEventListeners",(function(){s._form.removeEventListener("submit",s._handleSubmit),S((c=b(s),k(o.prototype)),"removeEventListeners",c).call(c)})),g(b(s),"toggleButtonText",(function(){var e=s._button.textContent;s._button.textContent=s._buttonText,s._buttonText=e})),s._handleSubmit=l.bind(b(s)),s._resetValidation=f,s._inputs=Array.from(s._element.querySelectorAll(u.inputSelector)),s._form=s._element.querySelector(u.formSelector),s._button=s._element.querySelector(u.submitButtonSelector),s._buttonText="Saving...",s}return o}(p);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},C(e,t,n||e)}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._title=t._element.querySelector(".popup__picture-title"),t._image=t._element.querySelector(".popup__picture"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._title.textContent=n,this._image.setAttribute("src",t),this._image.setAttribute("alt",n),C(P(a.prototype),"open",this).call(this)}}])&&w(t.prototype,n),a}(p);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function B(e,t){return B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},B(e,t)}function R(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return q(e)}function q(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e,t,n){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},x(e,t,n||e)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}function D(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=A(t);if(n){var o=A(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return R(this,e)});function o(e,t){var n,i,a,c,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),D(q(u=r.call(this,e)),"open",(function(e){u._handleConfirm=function(){e(),u.close()},u.setEventListeners(),x((n=q(u),A(o.prototype)),"open",n).call(n)})),D(q(u),"close",(function(){u.removeEventListeners(),x((i=q(u),A(o.prototype)),"close",i).call(i)})),D(q(u),"setEventListeners",(function(){u._buttonElement.addEventListener("click",u._handleConfirm),x((a=q(u),A(o.prototype)),"setEventListeners",a).call(a)})),D(q(u),"removeEventListeners",(function(){u._buttonElement.removeEventListener("click",u._handleConfirm),x((c=q(u),A(o.prototype)),"removeEventListeners",c).call(c)})),u._handleConfirm=function(){return u.close()},u._buttonElement=u._element.querySelector(t),u}return o}(p);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t){var n=t.userNameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._bioElement=document.querySelector(r),this._imageElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,bio:this._bioElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._bioElement.textContent=n}},{key:"setUserAvatar",value:function(e){this._imageElement.src=e}}])&&U(t.prototype,n),e}();function H(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t,n){var r=t.inputSelector,o=t.submitButtonSelector,i=t.inactiveButtonClass,a=t.inputErrorClass,c=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._inputSelector=r,this._submitButtonSelector=o,this._inactiveButtonClass=i,this._inputErrorClass=a,this._errorClass=c,this._boundHandleInput=this._handleInput.bind(this)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._inputElements=this._form.querySelectorAll(this._inputSelector),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputElements.forEach((function(t){e._hideError(t)})),this._disableButton()}},{key:"_handleInput",value:function(e){this._validateInput(e.target),this._setButtonState()}},{key:"_validateInput",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_hideError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_showError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_setEventListeners",value:function(){var e=this;this._inputElements.forEach((function(t){return t.addEventListener("input",e._boundHandleInput)}))}},{key:"_setButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputElements).some((function(e){return!e.validity.valid}))}},{key:"_disableButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}}])&&M(t.prototype,n),e}();function J(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function G(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?J(Object(n),!0).forEach((function(t){K(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):J(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function K(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var $=new o({host:f.host,authorization:f.token}),F=new N({userNameSelector:".profile__name",descriptionSelector:".profile__bio",avatarSelector:".profile__image"}),Q=new T(".popup_name_picture"),W=new E(".popup_name_edit-profile",{handleSubmit:function(e){var t=this;e.preventDefault(),this.toggleButtonText();var n=this._getInputValues(),r=n.name,o=n.bio;F.setUserInfo({name:r,about:o}),$.updateUser({name:r,about:o}).then((function(){t.close(),t.toggleButtonText()}))},resetValidation:function(){return re.resetValidation()}}),X=new E(".popup_name_new-place",{handleSubmit:function(e){var t=this;e.preventDefault(),this.toggleButtonText();var n=this._getInputValues(),r=n.title,o=n.link;$.addCard({name:r,link:o}).then((function(e){return ae.addItem(e)})).then((function(){t.close(),t.toggleButtonText()}))},resetValidation:function(){return oe.resetValidation()}}),Y=new E(".popup_name_edit-avatar",{handleSubmit:function(e){var t=this;e.preventDefault(),this.toggleButtonText();var n=this._getInputValues().url;F.setUserAvatar(n),$.updateUserAvatar(n).then((function(){t.close(),t.toggleButtonText()}))},resetValidation:function(){return ie.resetValidation()}}),Z=new V(".popup_name_confirm",u.submitButtonSelector),ee=document.querySelector(".form_name_edit-profile"),te=document.querySelector(".form_name_new-place"),ne=document.querySelector(".form_name_edit-avatar"),re=new z(u,ee),oe=new z(u,te),ie=new z(u,ne),ae=new function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),H(this,"renderItems",(function(e){e.forEach(r.addItem)})),H(this,"addItem",(function(e){var t=r._renderer(e);r._container.prepend(t)})),this._renderer=t,this._container=document.querySelector(n)}((function(e){var t={addLike:function(){return $.addLike(e._id)},removeLike:function(){return $.removeLike(e._id)},deleteCard:function(){return $.deleteCard(e._id)}};return new c(G(G({},e),{},{liked:e.likes.some((function(e){return e._id===$.userId}))}),G(G({},l),{},{openPicture:function(){return Q.open(e)}}),Z.open,t).generateCard(e.owner._id===$.userId)}),".gallery__container");function ce(e){ae.renderItems(e.reverse())}var ue=document.querySelector(".profile__edit-button"),se=document.querySelector(".profile__add-button"),le=document.querySelector(".profile__avatar");ue.addEventListener("click",(function(e){e.stopPropagation();var t=F.getUserInfo(),n=t.name,r=t.bio;W.open({name:n,bio:r})})),se.addEventListener("click",(function(e){e.stopPropagation(),X.open({})})),le.addEventListener("click",(function(e){e.stopPropagation(),Y.open({})})),re.enableValidation(),oe.enableValidation(),ie.enableValidation(),$.getUserInfo().then((function(e){F.setUserInfo(e),F.setUserAvatar(e.avatar)})).then((function(){return $.getCards().then(ce)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,