!function(){"use strict";function e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function t(t){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?e(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n=t.host,r=t.authorization;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._host=n,this._headers={authorization:r},this.userId=void 0}var n,o;return n=e,o=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("error: ".concat(e.status,", ").concat(e.statusText))}},{key:"getUserInfo",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"me";return fetch("".concat(this._host,"/users/").concat(t),{headers:this._headers}).then(this._handleResponse).then((function(t){return e.userId=t._id,t}))}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar"),{method:"PATCH",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({avatar:e})}).then(this._handleResponse)}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"updateUser",value:function(e){var n=e.name,r=e.about;return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:n,about:r})}).then(this._handleResponse)}},{key:"addCard",value:function(e){var n=e.name,r=e.link;return fetch("".concat(this._host,"/cards"),{method:"POST",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:n,link:r})}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._host,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._host,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}],o&&r(n.prototype,o),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(){function e(t,n,r){var o=this,i=t.name,c=t.link,u=t.likes,l=t.liked,s=r.addLike,f=r.removeLike,h=r.deleteCard,d=r.handleError,p=r.confirmDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_handleCardDelete",(function(){o._confirm((function(){return o._deleteCardApi().then((function(){o._element.remove(),o._element=null}))}),o._handleError)})),a(this,"_updateLikes",(function(e){o._element.querySelector(o._cardLikeSelector).classList.toggle(o._activeLikeButtonClass),o._isliked=!o._isliked,o._likeCount=e.likes.length,o._element.querySelector(o._cardLikesCounterSelector).textContent="".concat(o._likeCount)})),a(this,"_handleLikeClick",(function(){o._isliked?o._removeLikeApi().then(o._updateLikes).catch(o._handleError):o._addLikeApi().then(o._updateLikes).catch(o._handleError)})),this._name=i,this._link=c,this._likeCount=u.length,this._isliked=l,this._cardSelector=n.cardSelector,this._cardTemplateSelector=n.cardTemplateSelector,this._cardTitleSelector=n.cardTitleSelector,this._cardImageSelector=n.cardImageSelector,this._cardLikeSelector=n.cardLikeSelector,this._cardLikesCounterSelector=n.cardLikeCounterSelector,this._cardDeleteSelector=n.cardDeleteSelector,this._activeLikeButtonClass=n.activeLikeButtonClass,this._handlePicture=n.openPicture,this._confirm=p,this._addLikeApi=s,this._removeLikeApi=f,this._deleteCardApi=h,this._handleError=d}var t,n;return t=e,n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(this._cardSelector).cloneNode(!0)}},{key:"_addCardEvents",value:function(e){var t=this._element.querySelector(this._cardImageSelector),n=this._element.querySelector(this._cardLikeSelector),r=this._element.querySelector(this._cardDeleteSelector);e?r.addEventListener("click",this._handleCardDelete):r.remove(),t.addEventListener("click",this._handlePicture),n.addEventListener("click",this._handleLikeClick)}},{key:"generateCard",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._element=this._getTemplate(),this._addCardEvents(e),this._element.querySelector(this._cardTitleSelector).textContent=this._name,this._element.querySelector(this._cardLikesCounterSelector).textContent=this._likeCount,this._isliked&&this._element.querySelector(this._cardLikeSelector).classList.add(this._activeLikeButtonClass);var t=this._element.querySelector(this._cardImageSelector);return t.src=this._link,t.alt=this._name,this._element}}],n&&i(t.prototype,n),e}(),u=c,l={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_error",errorClass:"form__input-error_visible"},s="popup_visible",f={cardSelector:".card",cardTemplateSelector:".card__template",cardTitleSelector:".card__title",cardImageSelector:".card__image",cardLikeSelector:".card__like-button",cardLikeCounterSelector:".card__like-counter",cardDeleteSelector:".card__delete-button",activeLikeButtonClass:"card__like-button_active"};function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),d(this,"_handleEscapeClose",(function(e){"Escape"===e.key&&n.close()})),d(this,"_handleOverlayClose",(function(e){e.target.classList.contains(s)&&n.close()})),this._element=document.querySelector(t),this._closeButton=this._element.querySelector(".popup__close-button"),this._handleCloseButton=function(){return n.close()}}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add(s),this.setEventListeners()}},{key:"close",value:function(){this._element.classList.remove(s),this.removeEventListeners()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this._handleCloseButton),this._element.addEventListener("click",this._handleOverlayClose),document.addEventListener("keydown",this._handleEscapeClose)}},{key:"removeEventListeners",value:function(){this._closeButton.removeEventListener("click",this._handleCloseButton),this._element.removeEventListener("click",this._handleOverlayClose),document.removeEventListener("keydown",this._handleEscapeClose)}}])&&h(t.prototype,n),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function v(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return b(e)}function b(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function S(e,t,n){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},S(e,t,n||e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}function k(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=g(t);if(n){var o=g(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return v(this,e)});function o(e,t){var n,i,a,c,u,s=t.handleSubmit,f=t.resetValidation;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),k(b(u=r.call(this,e)),"_setInputValues",(function(e){for(var t=function(){var e,t,o=(e=r[n],t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1],c=u._inputs.find((function(e){return e.name===i}));void 0!==c&&(c.value=a)},n=0,r=Object.entries(e);n<r.length;n++)t()})),k(b(u),"getInputValues",(function(){var e={};return u._inputs.forEach((function(t){e[t.name]=t.value})),e})),k(b(u),"open",(function(e){u.setEventListeners(),u._setInputValues(e),S((n=b(u),g(o.prototype)),"open",n).call(n)})),k(b(u),"close",(function(){u.removeEventListeners(),u._resetValidation(),S((i=b(u),g(o.prototype)),"close",i).call(i),u._form.reset()})),k(b(u),"setEventListeners",(function(){u._form.addEventListener("submit",u._handleSubmit),S((a=b(u),g(o.prototype)),"setEventListeners",a).call(a)})),k(b(u),"removeEventListeners",(function(){u._form.removeEventListener("submit",u._handleSubmit),S((c=b(u),g(o.prototype)),"removeEventListeners",c).call(c)})),k(b(u),"toggleButtonText",(function(){var e=u._button.textContent;u._button.textContent=u._buttonText,u._buttonText=e})),u._handleSubmit=s.bind(b(u)),u._resetValidation=f,u._inputs=Array.from(u._element.querySelectorAll(l.inputSelector)),u._form=u._element.querySelector(l.formSelector),u._button=u._element.querySelector(l.submitButtonSelector),u._buttonText="Saving...",u}return o}(p);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},C(e,t,n||e)}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._title=t._element.querySelector(".popup__picture-title"),t._image=t._element.querySelector(".popup__picture"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._title.textContent=n,this._image.setAttribute("src",t),this._image.setAttribute("alt",n),C(P(a.prototype),"open",this).call(this)}}])&&w(t.prototype,n),a}(p);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function R(e,t){if(t&&("object"===B(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return q(e)}function q(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e,t,n){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},x(e,t,n||e)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}function A(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=D(t);if(n){var o=D(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return R(this,e)});function o(e,t){var n,i,a,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),A(q(c=r.call(this,e)),"open",(function(e,t){c._handleConfirm=function(){return e().then((function(){return c.close()})).catch(t)},x((n=q(c),D(o.prototype)),"open",n).call(n)})),A(q(c),"setEventListeners",(function(){c._buttonElement.addEventListener("click",c._handleConfirm),x((i=q(c),D(o.prototype)),"setEventListeners",i).call(i)})),A(q(c),"removeEventListeners",(function(){c._buttonElement.removeEventListener("click",c._handleConfirm),x((a=q(c),D(o.prototype)),"removeEventListeners",a).call(a)})),c._handleConfirm=function(){return c.close()},c._buttonElement=c._element.querySelector(t),c}return o}(p);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t){var n=t.userNameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._bioElement=document.querySelector(r),this._imageElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,bio:this._bioElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._bioElement.textContent=n}},{key:"setUserAvatar",value:function(e){this._imageElement.src=e}}])&&U(t.prototype,n),e}();function H(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n){var r=t.inputSelector,o=t.submitButtonSelector,i=t.inactiveButtonClass,a=t.inputErrorClass,c=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._inputSelector=r,this._submitButtonSelector=o,this._inactiveButtonClass=i,this._inputErrorClass=a,this._errorClass=c,this._boundHandleInput=this._handleInput.bind(this)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._inputElements=this._form.querySelectorAll(this._inputSelector),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputElements.forEach((function(t){e._hideError(t)})),this._disableButton()}},{key:"_handleInput",value:function(e){this._validateInput(e.target),this._setButtonState()}},{key:"_validateInput",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_hideError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_showError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_setEventListeners",value:function(){var e=this;this._inputElements.forEach((function(t){return t.addEventListener("input",e._boundHandleInput)}))}},{key:"_setButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputElements).some((function(e){return!e.validity.valid}))}},{key:"_disableButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}}])&&z(t.prototype,n),e}();function M(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function $(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?M(Object(n),!0).forEach((function(t){F(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):M(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function F(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var G=new o({host:"https://around.nomoreparties.co/v1/group-12",authorization:"9dcb4203-ec5d-4132-a4af-e260b13cb4d2"});function K(e){console.log("Api had an error: ".concat(e))}var Q=new N({userNameSelector:".profile__name",descriptionSelector:".profile__bio",avatarSelector:".profile__image"}),W=new T(".popup_name_picture"),X=new E(".popup_name_edit-profile",{handleSubmit:function(e){e.preventDefault(),X.toggleButtonText();var t=X.getInputValues(),n=t.name,r=t.bio;G.updateUser({name:n,about:r}).then((function(){Q.setUserInfo({name:n,about:r}),X.close()})).finally(X.toggleButtonText).catch(K)},resetValidation:function(){return oe.resetValidation()}}),Y=new E(".popup_name_new-place",{handleSubmit:function(e){e.preventDefault(),Y.toggleButtonText();var t=Y.getInputValues(),n=t.title,r=t.link;G.addCard({name:n,link:r}).then((function(e){return ce.addItem(e)})).then((function(){Y.close()})).finally(Y.toggleButtonText).catch(K)},resetValidation:function(){return ie.resetValidation()}}),Z=new E(".popup_name_edit-avatar",{handleSubmit:function(e){e.preventDefault(),Z.toggleButtonText();var t=Z.getInputValues().url;Q.setUserAvatar(t),G.updateUserAvatar(t).then((function(){Z.close()})).finally(Z.toggleButtonText).catch(K)},resetValidation:function(){return ae.resetValidation()}}),ee=new V(".popup_name_confirm",".popup__button"),te=document.querySelector(".form_name_edit-profile"),ne=document.querySelector(".form_name_new-place"),re=document.querySelector(".form_name_edit-avatar"),oe=new J(l,te),ie=new J(l,ne),ae=new J(l,re),ce=new function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),H(this,"renderItems",(function(e){e.forEach(r.addItem)})),H(this,"addItem",(function(e){var t=r._renderer(e);r._container.prepend(t)})),this._renderer=t,this._container=document.querySelector(n)}((function(e){var t={addLike:function(){return G.addLike(e._id)},removeLike:function(){return G.removeLike(e._id)},deleteCard:function(){return G.deleteCard(e._id)},handleError:K,confirmDelete:ee.open};return new u($($({},e),{},{liked:e.likes.some((function(e){return e._id===G.userId}))}),$($({},f),{},{openPicture:function(){return W.open(e)}}),t).generateCard(e.owner._id===G.userId)}),".gallery__container");function ue(e){ce.renderItems(e.reverse())}var le=document.querySelector(".profile__edit-button"),se=document.querySelector(".profile__add-button"),fe=document.querySelector(".profile__avatar");le.addEventListener("click",(function(e){e.stopPropagation();var t=Q.getUserInfo(),n=t.name,r=t.bio;X.open({name:n,bio:r})})),se.addEventListener("click",(function(e){e.stopPropagation(),Y.open({})})),fe.addEventListener("click",(function(e){e.stopPropagation(),Z.open({})})),oe.enableValidation(),ie.enableValidation(),ae.enableValidation(),G.getUserInfo().then((function(e){Q.setUserInfo(e),Q.setUserAvatar(e.avatar)})).then((function(){return G.getCards().then(ue)})).catch(K)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OUdELHdCTytHcEJ1TCxHQUFleEosU0FBUy9CLGNQOUdHLG9CT2dIakNxTCxHQUFXL0ksaUJBQWlCLFNBSzVCLFNBQStCb0IsR0FDN0JBLEVBQUU4SCxrQkFFRixNQUFvQjVDLEVBQVk2QyxjQUF6QjFNLEVBQVAsRUFBT0EsS0FBTThILEVBQWIsRUFBYUEsSUFDYmlDLEVBQVUrQixLQUFLLENBQUM5TCxLQUFBQSxFQUFNOEgsSUFBQUEsT0FSeEJ5RSxHQUFVaEosaUJBQWlCLFNBWTNCLFNBQThCb0IsR0FDNUJBLEVBQUU4SCxrQkFFRmxDLEVBQVN1QixLQUFLLE9BZGhCVSxHQUFhakosaUJBQWlCLFNBa0I5QixTQUErQm9CLEdBQzdCQSxFQUFFOEgsa0JBRUY1QixFQUFZaUIsS0FBSyxPQU9uQnhCLEdBQXFCcUMsbUJBQ3JCL0IsR0FBcUIrQixtQkFDckIxQixHQUFvQjBCLG1CQU1wQnBELEVBQUltRCxjQUFjbk4sTUFBSyxTQUFBRSxHQUNyQm9LLEVBQVlPLFlBQVkzSyxHQUN4Qm9LLEVBQVlrQixjQUFjdEwsRUFBS0UsV0FFaENKLE1BQUssa0JBQ0pnSyxFQUFJcUQsV0FDSHJOLEtBQUsyTSxPQUVQckssTUFBTTRILEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7aG9zdCwgYXV0aG9yaXphdGlvbn0pIHtcbiAgICB0aGlzLl9ob3N0ID0gaG9zdDtcbiAgICB0aGlzLl9oZWFkZXJzID0geyBhdXRob3JpemF0aW9uIH1cbiAgICB0aGlzLnVzZXJJZCA9IHVuZGVmaW5lZDtcbiAgfVxuICBfaGFuZGxlUmVzcG9uc2UocmVzKXtcbiAgICBpZihyZXMub2spXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYGVycm9yOiAke3Jlcy5zdGF0dXN9LCAke3Jlcy5zdGF0dXNUZXh0fWApO1xuICB9XG4gIGdldFVzZXJJbmZvKGlkPSdtZScpe1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9ob3N0fS91c2Vycy8ke2lkfWAse2hlYWRlcnM6IHRoaXMuX2hlYWRlcnN9KVxuICAgIC50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKVxuICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgdGhpcy51c2VySWQgPSBkYXRhLl9pZDtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0pO1xuICB9XG4gIHVwZGF0ZVVzZXJBdmF0YXIoYXZhdGFyKXtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5faG9zdH0vdXNlcnMvbWUvYXZhdGFyYCx7XG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIC4uLnRoaXMuX2hlYWRlcnMsXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXJcbiAgICAgIH0pfSlcbiAgICAudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cbiAgZ2V0Q2FyZHMoKXtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5faG9zdH0vY2FyZHNgLHtoZWFkZXJzOiB0aGlzLl9oZWFkZXJzfSlcbiAgICAudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cbiAgdXBkYXRlVXNlcih7bmFtZSxhYm91dH0pe1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9ob3N0fS91c2Vycy9tZWAse1xuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAuLi50aGlzLl9oZWFkZXJzLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYWJvdXRcbiAgICAgIH0pfSlcbiAgICAudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cbiAgYWRkQ2FyZCh7bmFtZSxsaW5rfSl7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2hvc3R9L2NhcmRzYCx7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgLi4udGhpcy5faGVhZGVycyxcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGxpbmtcbiAgICAgIH0pfSlcbiAgICAudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cbiAgZGVsZXRlQ2FyZChpZCl7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2hvc3R9L2NhcmRzLyR7aWR9YCwge21ldGhvZDogJ0RFTEVURScsIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnN9KVxuICAgIC50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcbiAgfVxuICBhZGRMaWtlKGlkKXtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5faG9zdH0vY2FyZHMvbGlrZXMvJHtpZH1gLCB7bWV0aG9kOiAnUFVUJywgaGVhZGVyczogdGhpcy5faGVhZGVyc30pXG4gICAgLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG4gIHJlbW92ZUxpa2UoaWQpe1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9ob3N0fS9jYXJkcy9saWtlcy8ke2lkfWAsIHttZXRob2Q6ICdERUxFVEUnLCBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzfSlcbiAgICAudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cbn1cbiIsImNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3Rvcih7bmFtZSwgbGluaywgbGlrZXMsIGxpa2VkfSwgYXNzZXRzLCB7YWRkTGlrZSwgcmVtb3ZlTGlrZSwgZGVsZXRlQ2FyZCwgaGFuZGxlRXJyb3IgLGNvbmZpcm1EZWxldGV9KSB7XG5cbiAgICAvL2RhdGFcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9saW5rID0gbGluaztcbiAgICB0aGlzLl9saWtlQ291bnQgPSBsaWtlcy5sZW5ndGg7XG4gICAgdGhpcy5faXNsaWtlZCA9IGxpa2VkO1xuXG4gICAgLy8gc2VsZWN0b3JzXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gYXNzZXRzLmNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkVGVtcGxhdGVTZWxlY3RvciA9IGFzc2V0cy5jYXJkVGVtcGxhdGVTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkVGl0bGVTZWxlY3RvciA9IGFzc2V0cy5jYXJkVGl0bGVTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkSW1hZ2VTZWxlY3RvciA9IGFzc2V0cy5jYXJkSW1hZ2VTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkTGlrZVNlbGVjdG9yID0gYXNzZXRzLmNhcmRMaWtlU2VsZWN0b3I7XG4gICAgdGhpcy5fY2FyZExpa2VzQ291bnRlclNlbGVjdG9yID0gYXNzZXRzLmNhcmRMaWtlQ291bnRlclNlbGVjdG9yO1xuICAgIHRoaXMuX2NhcmREZWxldGVTZWxlY3RvciA9IGFzc2V0cy5jYXJkRGVsZXRlU2VsZWN0b3I7XG5cbiAgICB0aGlzLl9hY3RpdmVMaWtlQnV0dG9uQ2xhc3MgPSBhc3NldHMuYWN0aXZlTGlrZUJ1dHRvbkNsYXNzO1xuXG4gICAgLy8gZnVuY3Rpb25zXG4gICAgdGhpcy5faGFuZGxlUGljdHVyZSA9IGFzc2V0cy5vcGVuUGljdHVyZTtcbiAgICB0aGlzLl9jb25maXJtID0gY29uZmlybURlbGV0ZTtcbiAgICB0aGlzLl9hZGRMaWtlQXBpID0gYWRkTGlrZTtcbiAgICB0aGlzLl9yZW1vdmVMaWtlQXBpID0gcmVtb3ZlTGlrZTtcbiAgICB0aGlzLl9kZWxldGVDYXJkQXBpID0gZGVsZXRlQ2FyZDtcbiAgICB0aGlzLl9oYW5kbGVFcnJvciA9IGhhbmRsZUVycm9yO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFRlbXBsYXRlU2VsZWN0b3IpLmNvbnRlbnQ7XG4gICAgcmV0dXJuIGNhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcikuY2xvbmVOb2RlKHRydWUpO1xuICB9XG5cbiAgX2hhbmRsZUNhcmREZWxldGUgPSAoKSA9PiB7XG4gICAgdGhpcy5fY29uZmlybSgoKSA9PlxuICAgICAgdGhpcy5fZGVsZXRlQ2FyZEFwaSgpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgICAgfSlcbiAgICAsIHRoaXMuX2hhbmRsZUVycm9yKTtcbiAgfVxuXG4gIF91cGRhdGVMaWtlcyA9IChkYXRhKSA9PiB7XG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkTGlrZVNlbGVjdG9yKTtcbiAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUodGhpcy5fYWN0aXZlTGlrZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9pc2xpa2VkID0gIXRoaXMuX2lzbGlrZWQ7XG4gICAgdGhpcy5fbGlrZUNvdW50ID0gZGF0YS5saWtlcy5sZW5ndGg7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRMaWtlc0NvdW50ZXJTZWxlY3RvcikudGV4dENvbnRlbnQgPSBgJHt0aGlzLl9saWtlQ291bnR9YDtcbiAgfVxuXG4gIF9oYW5kbGVMaWtlQ2xpY2sgPSAoKSA9PiB7XG4gICAgaWYodGhpcy5faXNsaWtlZCl7XG4gICAgICB0aGlzLl9yZW1vdmVMaWtlQXBpKClcbiAgICAgIC50aGVuKHRoaXMuX3VwZGF0ZUxpa2VzKVxuICAgICAgLmNhdGNoKHRoaXMuX2hhbmRsZUVycm9yKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLl9hZGRMaWtlQXBpKClcbiAgICAgIC50aGVuKHRoaXMuX3VwZGF0ZUxpa2VzKVxuICAgICAgLmNhdGNoKHRoaXMuX2hhbmRsZUVycm9yKTtcbiAgICB9XG4gIH1cblxuICBfYWRkQ2FyZEV2ZW50cyhpc0NhcmRPd25lcil7XG4gICAgY29uc3QgY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRJbWFnZVNlbGVjdG9yKTtcbiAgICBjb25zdCBjYXJkTGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkTGlrZVNlbGVjdG9yKTtcbiAgICBjb25zdCBjYXJkRGVsZXRlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmREZWxldGVTZWxlY3Rvcik7XG5cbiAgICBpZihpc0NhcmRPd25lcil7XG4gICAgICBjYXJkRGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlQ2FyZERlbGV0ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgY2FyZERlbGV0ZUJ1dHRvbi5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICBjYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVQaWN0dXJlKTtcbiAgICBjYXJkTGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2hhbmRsZUxpa2VDbGljayk7XG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoaXNDYXJkT3duZXI9ZmFsc2Upe1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuXG4gICAgdGhpcy5fYWRkQ2FyZEV2ZW50cyhpc0NhcmRPd25lcik7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRUaXRsZVNlbGVjdG9yKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRMaWtlc0NvdW50ZXJTZWxlY3RvcikudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlQ291bnQ7XG4gICAgaWYodGhpcy5faXNsaWtlZClcbiAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkTGlrZVNlbGVjdG9yKS5jbGFzc0xpc3QuYWRkKHRoaXMuX2FjdGl2ZUxpa2VCdXR0b25DbGFzcyk7XG4gICAgY29uc3QgaW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZEltYWdlU2VsZWN0b3IpO1xuICAgIGltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgaW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCIvKlxuICBET00gZWxlbWVudHM6XG4qL1xuXG4vLyBGb3Jtc1xuY29uc3QgcHJvZmlsZUZvcm1TZWxlY3RvciA9ICcuZm9ybV9uYW1lX2VkaXQtcHJvZmlsZSc7XG5jb25zdCBwaWN0dXJlRm9ybVNlbGVjdG9yID0gJy5mb3JtX25hbWVfbmV3LXBsYWNlJztcbmNvbnN0IGF2YXRhckZvcm1TZWxlY3RvciA9ICcuZm9ybV9uYW1lX2VkaXQtYXZhdGFyJztcbmNvbnN0IGZvcm1TZWxlY3RvcnMgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIuZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIuZm9ybV9fc2F2ZS1idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJmb3JtX19zYXZlLWJ1dHRvbl9kaXNhYmxlZFwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJmb3JtX19pbnB1dC1lcnJvcl92aXNpYmxlXCJcbn1cblxuLy8gQnV0dG9uc1xuY29uc3QgZWRpdEJ1dHRvblNlbGVjdG9yID0gJy5wcm9maWxlX19lZGl0LWJ1dHRvbic7XG5jb25zdCBhZGRCdXR0b25TZWxlY3RvciA9ICcucHJvZmlsZV9fYWRkLWJ1dHRvbic7XG5jb25zdCBlZGl0QXZhdGFyQnV0dG9uU2VsZWN0b3IgPSAnLnByb2ZpbGVfX2F2YXRhcic7XG5cbi8vIFByb2ZpbGVcbmNvbnN0IHByb2ZpbGVTZWxlY3RvcnMgPSB7XG4gIHVzZXJOYW1lU2VsZWN0b3I6ICcucHJvZmlsZV9fbmFtZScsXG4gIGRlc2NyaXB0aW9uU2VsZWN0b3I6ICcucHJvZmlsZV9fYmlvJyxcbiAgYXZhdGFyU2VsZWN0b3I6ICcucHJvZmlsZV9faW1hZ2UnXG59O1xuXG4vLyBQb3B1cHNcbmNvbnN0IGVkaXRQcm9maWxlUG9wdXBTZWxlY3RvciA9ICcucG9wdXBfbmFtZV9lZGl0LXByb2ZpbGUnO1xuY29uc3QgYWRkQ2FyZFBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX25hbWVfbmV3LXBsYWNlJztcbmNvbnN0IHBpY3R1cmVQb3B1cFNlbGVjdG9yID0gJy5wb3B1cF9uYW1lX3BpY3R1cmUnO1xuY29uc3QgYXZhdGFyUG9wdXBTZWxlY3RvciA9ICcucG9wdXBfbmFtZV9lZGl0LWF2YXRhcic7XG5jb25zdCBjb25maXJtUG9wdXBTZWxlY3RvciA9ICcucG9wdXBfbmFtZV9jb25maXJtJztcblxuY29uc3QgYWN0aXZlUG9wdXBDbGFzcyA9IFwicG9wdXBfdmlzaWJsZVwiO1xuY29uc3QgcG9wdXBDbG9zZUJ1dHRvblNlbGVjdG9yID0gJy5wb3B1cF9fY2xvc2UtYnV0dG9uJztcbmNvbnN0IHBvcHVwVGl0bGVTZWxlY3RvciA9ICcucG9wdXBfX3BpY3R1cmUtdGl0bGUnO1xuY29uc3QgcG9wdXBJbWFnZVNlbGVjdG9yID0gJy5wb3B1cF9fcGljdHVyZSc7XG5jb25zdCBwb3B1cEJ1dHRvblNlbGVjdG9yID0gJy5wb3B1cF9fYnV0dG9uJztcblxuLy8gQ2FyZHNcbmNvbnN0IGNhcmRTZWxlY3RvcnMgPSB7XG4gIGNhcmRTZWxlY3RvcjogXCIuY2FyZFwiLFxuICBjYXJkVGVtcGxhdGVTZWxlY3RvcjogXCIuY2FyZF9fdGVtcGxhdGVcIixcbiAgY2FyZFRpdGxlU2VsZWN0b3I6IFwiLmNhcmRfX3RpdGxlXCIsXG4gIGNhcmRJbWFnZVNlbGVjdG9yOiBcIi5jYXJkX19pbWFnZVwiLFxuICBjYXJkTGlrZVNlbGVjdG9yOiBcIi5jYXJkX19saWtlLWJ1dHRvblwiLFxuICBjYXJkTGlrZUNvdW50ZXJTZWxlY3RvcjogXCIuY2FyZF9fbGlrZS1jb3VudGVyXCIsXG4gIGNhcmREZWxldGVTZWxlY3RvcjogXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiLFxuICBhY3RpdmVMaWtlQnV0dG9uQ2xhc3M6IFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCJcbn1cbmNvbnN0IGNhcmRzQ29udGFpbmVyU2VsZWN0b3IgPSAnLmdhbGxlcnlfX2NvbnRhaW5lcic7XG5cbi8qXG4gIEFwaTpcbiovXG5jb25zdCBhcGlLZXkgPSB7XG4gIGhvc3Q6IHByb2Nlc3MuZW52LkhPU1QsXG4gIHRva2VuOiBwcm9jZXNzLmVudi5UT0tFTlxufVxuXG5leHBvcnQge2FwaUtleSwgZm9ybVNlbGVjdG9ycywgYWN0aXZlUG9wdXBDbGFzcywgY2FyZFNlbGVjdG9ycywgZWRpdEJ1dHRvblNlbGVjdG9yLCBhZGRCdXR0b25TZWxlY3RvciwgZWRpdEF2YXRhckJ1dHRvblNlbGVjdG9yLCBlZGl0UHJvZmlsZVBvcHVwU2VsZWN0b3IsIGFkZENhcmRQb3B1cFNlbGVjdG9yLCBwaWN0dXJlUG9wdXBTZWxlY3RvciwgYXZhdGFyUG9wdXBTZWxlY3RvciwgY29uZmlybVBvcHVwU2VsZWN0b3IsIGNhcmRzQ29udGFpbmVyU2VsZWN0b3IsIHByb2ZpbGVGb3JtU2VsZWN0b3IsIHBpY3R1cmVGb3JtU2VsZWN0b3IsIGF2YXRhckZvcm1TZWxlY3RvciwgcG9wdXBDbG9zZUJ1dHRvblNlbGVjdG9yLCBwb3B1cFRpdGxlU2VsZWN0b3IsIHBvcHVwSW1hZ2VTZWxlY3RvciwgcG9wdXBCdXR0b25TZWxlY3RvciwgcHJvZmlsZVNlbGVjdG9yc307XG4iLCJpbXBvcnQgeyBhY3RpdmVQb3B1cENsYXNzLCBwb3B1cENsb3NlQnV0dG9uU2VsZWN0b3IgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3IpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgdGhpcy5fY2xvc2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBDbG9zZUJ1dHRvblNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVDbG9zZUJ1dHRvbiA9ICgpID0+IHRoaXMuY2xvc2UoKTtcbiAgfVxuICBvcGVuKCkge1xuICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChhY3RpdmVQb3B1cENsYXNzKTtcbiAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGFjdGl2ZVBvcHVwQ2xhc3MpO1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuICBfaGFuZGxlRXNjYXBlQ2xvc2UgPSAoZSkgPT4ge1xuICAgIGlmKGUua2V5PT09J0VzY2FwZScpXG4gICAgICB0aGlzLmNsb3NlKCk7XG4gIH1cbiAgX2hhbmRsZU92ZXJsYXlDbG9zZSA9IChlKSA9PiB7XG4gICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKGFjdGl2ZVBvcHVwQ2xhc3MpKVxuICAgICAgdGhpcy5jbG9zZSgpO1xuICB9XG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlQ2xvc2VCdXR0b24pO1xuICAgIHRoaXMuX2VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVPdmVybGF5Q2xvc2UpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NhcGVDbG9zZSk7XG4gIH1cbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fY2xvc2VCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVDbG9zZUJ1dHRvbik7XG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZSk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY2FwZUNsb3NlKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XG5pbXBvcnQgeyBmb3JtU2VsZWN0b3JzIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rvciwge2hhbmRsZVN1Ym1pdCwgcmVzZXRWYWxpZGF0aW9ufSkge1xuICAgIHN1cGVyKHNlbGVjdG9yKTtcblxuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCA9IGhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX3Jlc2V0VmFsaWRhdGlvbiA9IHJlc2V0VmFsaWRhdGlvbjtcblxuICAgIHRoaXMuX2lucHV0cyA9IEFycmF5LmZyb20odGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGZvcm1TZWxlY3RvcnMuaW5wdXRTZWxlY3RvcikpO1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9ycy5mb3JtU2VsZWN0b3IpO1xuICAgIHRoaXMuX2J1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcihmb3JtU2VsZWN0b3JzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICAgIHRoaXMuX2J1dHRvblRleHQgPSAnU2F2aW5nLi4uJztcbiAgfVxuICBfc2V0SW5wdXRWYWx1ZXMgPSAodmFsdWVzKSA9PiB7XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXModmFsdWVzKSkge1xuICAgICAgY29uc3QgaW5wdXQgPSB0aGlzLl9pbnB1dHMuZmluZChpbnB1dCA9PiBpbnB1dC5uYW1lID09PSBrZXkpO1xuICAgICAgaWYodHlwZW9mIGlucHV0ICE9PSAndW5kZWZpbmVkJylcbiAgICAgICAgaW5wdXQudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gIH1cbiAgZ2V0SW5wdXRWYWx1ZXMgPSAoKSA9PiB7XG4gICAgY29uc3QgdmFsdWVzID0ge307XG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgdmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfVxuICBvcGVuID0gKHZhbHVlcykgPT4ge1xuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9zZXRJbnB1dFZhbHVlcyh2YWx1ZXMpO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxuICBjbG9zZSA9ICgpID0+IHtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fcmVzZXRWYWxpZGF0aW9uKCk7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVTdWJtaXQpO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5fZm9ybS5yZW1vdmVFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVTdWJtaXQpO1xuICAgIHN1cGVyLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgdG9nZ2xlQnV0dG9uVGV4dCA9ICgpID0+IHtcbiAgICBjb25zdCBidXR0b25UZXh0ID0gdGhpcy5fYnV0dG9uLnRleHRDb250ZW50O1xuICAgIHRoaXMuX2J1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX2J1dHRvblRleHQ7XG4gICAgdGhpcy5fYnV0dG9uVGV4dCA9IGJ1dHRvblRleHQ7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xuaW1wb3J0IHsgcG9wdXBUaXRsZVNlbGVjdG9yLCBwb3B1cEltYWdlU2VsZWN0b3IgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xuICAgIHN1cGVyKHNlbGVjdG9yKTtcbiAgICB0aGlzLl90aXRsZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFRpdGxlU2VsZWN0b3IpO1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwSW1hZ2VTZWxlY3Rvcik7XG4gIH1cbiAgb3Blbih7bGluaywgbmFtZX0pIHtcbiAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5faW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBsaW5rKTtcbiAgICB0aGlzLl9pbWFnZS5zZXRBdHRyaWJ1dGUoJ2FsdCcsIG5hbWUpO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3IsIGJ1dHRvblNlbGVjdG9yKXtcbiAgICBzdXBlcihzZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlQ29uZmlybSA9ICgpID0+IHRoaXMuY2xvc2UoKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKGJ1dHRvblNlbGVjdG9yKTtcbiAgfVxuICBvcGVuID0gKGhhbmRsZUNvbmZpcm0sIGhhbmRsZUVycm9yKSA9PiB7XG4gICAgdGhpcy5faGFuZGxlQ29uZmlybSA9ICgpID0+XG4gICAgICBoYW5kbGVDb25maXJtKClcbiAgICAgIC50aGVuKCgpID0+IHRoaXMuY2xvc2UoKSlcbiAgICAgIC5jYXRjaChoYW5kbGVFcnJvcik7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG4gIHNldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVDb25maXJtKTtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG4gIHJlbW92ZUV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVDb25maXJtKTtcbiAgICBzdXBlci5yZW1vdmVFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHt1c2VyTmFtZVNlbGVjdG9yLCBkZXNjcmlwdGlvblNlbGVjdG9yLCBhdmF0YXJTZWxlY3Rvcn0pIHtcbiAgICB0aGlzLl9uYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlck5hbWVTZWxlY3Rvcik7XG4gICAgdGhpcy5fYmlvRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGVzY3JpcHRpb25TZWxlY3Rvcik7XG4gICAgdGhpcy5faW1hZ2VFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XG4gIH1cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHtuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCwgYmlvOiB0aGlzLl9iaW9FbGVtZW50LnRleHRDb250ZW50fTtcbiAgfVxuICBzZXRVc2VySW5mbyh7bmFtZSwgYWJvdXR9KSB7XG4gICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX2Jpb0VsZW1lbnQudGV4dENvbnRlbnQgPSBhYm91dDtcbiAgfVxuICBzZXRVc2VyQXZhdGFyKGxpbmspe1xuICAgIHRoaXMuX2ltYWdlRWxlbWVudC5zcmMgPSBsaW5rO1xuICB9XG59XG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioe2lucHV0U2VsZWN0b3IsIHN1Ym1pdEJ1dHRvblNlbGVjdG9yLCBpbmFjdGl2ZUJ1dHRvbkNsYXNzLCBpbnB1dEVycm9yQ2xhc3MsIGVycm9yQ2xhc3N9LCBmb3JtKSB7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XG5cbiAgICAvLyBzZWxlY3RvcnNcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuXG4gICAgLy8gY2xhc3Nlc1xuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBpbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gZXJyb3JDbGFzcztcblxuICAgIHRoaXMuX2JvdW5kSGFuZGxlSW5wdXQgPSB0aGlzLl9oYW5kbGVJbnB1dC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goaW5wdXQ9PntcbiAgICAgIHRoaXMuX2hpZGVFcnJvcihpbnB1dCk7XG4gICAgfSk7XG4gICAgdGhpcy5fZGlzYWJsZUJ1dHRvbigpO1xuICB9XG5cbiAgX2hhbmRsZUlucHV0KGUpe1xuICAgIHRoaXMuX3ZhbGlkYXRlSW5wdXQoZS50YXJnZXQpO1xuICAgIHRoaXMuX3NldEJ1dHRvblN0YXRlKCk7XG4gIH1cblxuICBfdmFsaWRhdGVJbnB1dChpbnB1dCkge1xuICAgIGlmKGlucHV0LnZhbGlkaXR5LnZhbGlkKXtcbiAgICAgIHRoaXMuX2hpZGVFcnJvcihpbnB1dCk7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICB0aGlzLl9zaG93RXJyb3IoaW5wdXQpO1xuICAgIH1cbiAgfVxuXG4gIF9oaWRlRXJyb3IoaW5wdXQpIHtcbiAgICBjb25zdCBlcnJvciA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgZXJyb3IudGV4dENvbnRlbnQgPSAnJztcbiAgICBlcnJvci5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9zaG93RXJyb3IoaW5wdXQpIHtcbiAgICBjb25zdCBlcnJvciA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgZXJyb3IudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBlcnJvci5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goaW5wdXQgPT4gaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB0aGlzLl9ib3VuZEhhbmRsZUlucHV0KSk7XG4gIH1cblxuICBfc2V0QnV0dG9uU3RhdGUoKSB7XG4gICAgaWYodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcbiAgICB9XG4gICAgZWxzZXtcbiAgICAgIHRoaXMuX2VuYWJsZUJ1dHRvbigpO1xuICAgIH1cbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5faW5wdXRFbGVtZW50cykuc29tZShpbnB1dD0+IWlucHV0LnZhbGlkaXR5LnZhbGlkKTtcbiAgfVxuXG4gIF9kaXNhYmxlQnV0dG9uKCkge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIF9lbmFibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xuIiwiLy8gc3R5bGU6XG5pbXBvcnQgJy4vaW5kZXguY3NzJztcblxuLy8gY29tcG9uZW50czpcbmltcG9ydCBBcGkgZnJvbSAnLi4vY29tcG9uZW50cy9BcGknXG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQnO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtJztcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlJztcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24nXG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mbyc7XG5pbXBvcnQgU2VjdGlvbiAgZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uJztcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvcic7XG5pbXBvcnQge2FwaUtleSwgcHJvZmlsZVNlbGVjdG9ycywgZm9ybVNlbGVjdG9ycywgY2FyZFNlbGVjdG9ycywgZWRpdEJ1dHRvblNlbGVjdG9yLCBhZGRCdXR0b25TZWxlY3RvciwgZWRpdEF2YXRhckJ1dHRvblNlbGVjdG9yLCBhdmF0YXJQb3B1cFNlbGVjdG9yLCBjb25maXJtUG9wdXBTZWxlY3RvciwgZWRpdFByb2ZpbGVQb3B1cFNlbGVjdG9yLCBhZGRDYXJkUG9wdXBTZWxlY3RvciwgcGljdHVyZVBvcHVwU2VsZWN0b3IsIGNhcmRzQ29udGFpbmVyU2VsZWN0b3IsIHByb2ZpbGVGb3JtU2VsZWN0b3IsIHBpY3R1cmVGb3JtU2VsZWN0b3IsIHBvcHVwQnV0dG9uU2VsZWN0b3IsIGF2YXRhckZvcm1TZWxlY3Rvcn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzJ1xuXG4vKlxuICBBUEk6XG4qL1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtob3N0OiBhcGlLZXkuaG9zdCwgYXV0aG9yaXphdGlvbjogYXBpS2V5LnRva2VufSk7XG5cbmZ1bmN0aW9uIGhhbmRsZUFwaUVycm9yKGVycil7XG4gIGNvbnNvbGUubG9nKGBBcGkgaGFkIGFuIGVycm9yOiAke2Vycn1gKVxufVxuXG4vKlxuICBQcm9maWxlOlxuKi9cblxuY29uc3QgcHJvZmlsZVZpZXcgPSBuZXcgVXNlckluZm8ocHJvZmlsZVNlbGVjdG9ycyk7XG5cbi8qXG4gIFBvcHVwczpcbiovXG5cbmNvbnN0IHBpY3R1cmVQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShwaWN0dXJlUG9wdXBTZWxlY3Rvcik7XG5jb25zdCBlZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShlZGl0UHJvZmlsZVBvcHVwU2VsZWN0b3IsIHtoYW5kbGVTdWJtaXQ6IGhhbmRsZVByb2ZpbGVTdWJtaXQsIHJlc2V0VmFsaWRhdGlvbjogKCk9PnByb2ZpbGVGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpfSk7XG5jb25zdCBhZGRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKGFkZENhcmRQb3B1cFNlbGVjdG9yLCB7aGFuZGxlU3VibWl0OiBoYW5kbGVQbGFjZVN1Ym1pdCwgcmVzZXRWYWxpZGF0aW9uOiAoKT0+cGljdHVyZUZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCl9KTtcbmNvbnN0IGF2YXRhclBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oYXZhdGFyUG9wdXBTZWxlY3Rvciwge2hhbmRsZVN1Ym1pdDogaGFuZGxlQXZhdGFyU3VibWl0LCByZXNldFZhbGlkYXRpb246ICgpPT5hdmF0YXJGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpfSk7XG5jb25zdCBjb25maXJtUG9wdXAgPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKGNvbmZpcm1Qb3B1cFNlbGVjdG9yLCBwb3B1cEJ1dHRvblNlbGVjdG9yKTtcblxuLypcbiAgRm9ybXM6XG4qL1xuXG5jb25zdCBwcm9maWxlRm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVGb3JtU2VsZWN0b3IpO1xuY29uc3QgcGljdHVyZUZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwaWN0dXJlRm9ybVNlbGVjdG9yKTtcbmNvbnN0IGF2YXRhckZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJGb3JtU2VsZWN0b3IpO1xuXG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1TZWxlY3RvcnMsIHByb2ZpbGVGb3JtRWxlbWVudCk7XG5jb25zdCBwaWN0dXJlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1TZWxlY3RvcnMsIHBpY3R1cmVGb3JtRWxlbWVudCk7XG5jb25zdCBhdmF0YXJGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNlbGVjdG9ycywgYXZhdGFyRm9ybUVsZW1lbnQpO1xuXG4vLyBQbGFjZSBmb3JtIGRhdGEgaGFuZGxlclxuZnVuY3Rpb24gaGFuZGxlUGxhY2VTdWJtaXQoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgYWRkUG9wdXAudG9nZ2xlQnV0dG9uVGV4dCgpO1xuXG4gIGNvbnN0IHt0aXRsZTogbmFtZSwgbGlua30gPSBhZGRQb3B1cC5nZXRJbnB1dFZhbHVlcygpO1xuICBhcGkuYWRkQ2FyZCh7bmFtZSwgbGlua30pXG4gIC50aGVuKGRhdGEgPT4gZ2FsbGVyeVNlY3Rpb24uYWRkSXRlbShkYXRhKSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIGFkZFBvcHVwLmNsb3NlKCk7XG4gIH0pXG4gIC5maW5hbGx5KGFkZFBvcHVwLnRvZ2dsZUJ1dHRvblRleHQpXG4gIC5jYXRjaChoYW5kbGVBcGlFcnJvcik7XG59XG5cbi8vIFByb2ZpbGUgZm9ybSBkYXRhIGhhbmRsZXJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVTdWJtaXQoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgZWRpdFBvcHVwLnRvZ2dsZUJ1dHRvblRleHQoKTtcblxuICBjb25zdCB7bmFtZSwgYmlvOiBhYm91dH0gPSBlZGl0UG9wdXAuZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgYXBpLnVwZGF0ZVVzZXIoe25hbWUsIGFib3V0fSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIHByb2ZpbGVWaWV3LnNldFVzZXJJbmZvKHtuYW1lLCBhYm91dH0pO1xuICAgIGVkaXRQb3B1cC5jbG9zZSgpO1xuICB9KVxuICAuZmluYWxseShlZGl0UG9wdXAudG9nZ2xlQnV0dG9uVGV4dClcbiAgLmNhdGNoKGhhbmRsZUFwaUVycm9yKTtcbn1cblxuLy8gQXZhdGFyIGZvcm0gc3VibWl0XG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJTdWJtaXQoZSl7XG4gIGUucHJldmVudERlZmF1bHQoKTtcblxuICBhdmF0YXJQb3B1cC50b2dnbGVCdXR0b25UZXh0KCk7XG5cbiAgY29uc3Qge3VybH0gPSBhdmF0YXJQb3B1cC5nZXRJbnB1dFZhbHVlcygpO1xuXG4gIHByb2ZpbGVWaWV3LnNldFVzZXJBdmF0YXIodXJsKTtcbiAgYXBpLnVwZGF0ZVVzZXJBdmF0YXIodXJsKVxuICAudGhlbigoKSA9PiB7XG4gICAgYXZhdGFyUG9wdXAuY2xvc2UoKTtcbiAgfSlcbiAgLmZpbmFsbHkoYXZhdGFyUG9wdXAudG9nZ2xlQnV0dG9uVGV4dClcbiAgLmNhdGNoKGhhbmRsZUFwaUVycm9yKTtcbn1cblxuLypcbiAgQ2FyZHM6XG4qL1xuXG5jb25zdCBnYWxsZXJ5U2VjdGlvbiA9IG5ldyBTZWN0aW9uKGFkZE5ld0NhcmQsIGNhcmRzQ29udGFpbmVyU2VsZWN0b3IpO1xuXG5mdW5jdGlvbiBnZXRDYXJkc0Zyb21BcGkoY2FyZHMpe1xuICBnYWxsZXJ5U2VjdGlvbi5yZW5kZXJJdGVtcyhjYXJkcy5yZXZlcnNlKCkpO1xufVxuXG5mdW5jdGlvbiBhZGROZXdDYXJkKGRhdGEpe1xuICBjb25zdCBjYXJkQXBpRnVuY3Rpb25zID0ge1xuICAgIGFkZExpa2U6ICgpID0+IGFwaS5hZGRMaWtlKGRhdGEuX2lkKSxcbiAgICByZW1vdmVMaWtlOiAoKSA9PiBhcGkucmVtb3ZlTGlrZShkYXRhLl9pZCksXG4gICAgZGVsZXRlQ2FyZDogKCkgPT4gYXBpLmRlbGV0ZUNhcmQoZGF0YS5faWQpLFxuICAgIGhhbmRsZUVycm9yOiBoYW5kbGVBcGlFcnJvcixcbiAgICBjb25maXJtRGVsZXRlOiBjb25maXJtUG9wdXAub3BlblxuICB9XG5cbiAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkKHsuLi5kYXRhLCBsaWtlZDogZGF0YS5saWtlcy5zb21lKG9iaj0+b2JqLl9pZD09PWFwaS51c2VySWQpfSwgey4uLmNhcmRTZWxlY3RvcnMsIG9wZW5QaWN0dXJlOiAoKSA9PiBwaWN0dXJlUG9wdXAub3BlbihkYXRhKX0sIGNhcmRBcGlGdW5jdGlvbnMpO1xuICByZXR1cm4gbmV3Q2FyZC5nZW5lcmF0ZUNhcmQoZGF0YS5vd25lci5faWQ9PT1hcGkudXNlcklkKTtcbn1cblxuLypcbiAgUGFnZSBCdXR0b25zOlxuKi9cblxuY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWRpdEJ1dHRvblNlbGVjdG9yKTtcbmNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWRkQnV0dG9uU2VsZWN0b3IpO1xuY29uc3QgYXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlZGl0QXZhdGFyQnV0dG9uU2VsZWN0b3IpO1xuXG5lZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRWRpdEJ1dHRvbkNsaWNrKTtcbmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUFkZEJ1dHRvbkNsaWNrKTtcbmF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUVkaXRBdmF0YXJDbGljayk7XG5cbi8vIEVkaXQgY2xpY2sgaGFuZGxlclxuZnVuY3Rpb24gaGFuZGxlRWRpdEJ1dHRvbkNsaWNrKGUpIHtcbiAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICBjb25zdCB7bmFtZSwgYmlvfSA9IHByb2ZpbGVWaWV3LmdldFVzZXJJbmZvKCk7XG4gIGVkaXRQb3B1cC5vcGVuKHtuYW1lLCBiaW99KTtcbn1cblxuLy8gQWRkIGNsaWNrIGhhbmRsZXJcbmZ1bmN0aW9uIGhhbmRsZUFkZEJ1dHRvbkNsaWNrKGUpIHtcbiAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICBhZGRQb3B1cC5vcGVuKHt9KTtcbn1cblxuLy8gQXZhdGFyIGNsaWNrIGhhbmRsZXJcbmZ1bmN0aW9uIGhhbmRsZUVkaXRBdmF0YXJDbGljayhlKXtcbiAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICBhdmF0YXJQb3B1cC5vcGVuKHt9KTtcbn1cblxuLypcbiAgVmFsaWRhdGlvbjpcbiovXG5cbnByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbnBpY3R1cmVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmF2YXRhckZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG4vKlxuICBMb2FkIGluaXRpYWwgQXBpIGRhdGE6XG4qL1xuXG5hcGkuZ2V0VXNlckluZm8oKS50aGVuKGRhdGE9PntcbiAgcHJvZmlsZVZpZXcuc2V0VXNlckluZm8oZGF0YSk7XG4gIHByb2ZpbGVWaWV3LnNldFVzZXJBdmF0YXIoZGF0YS5hdmF0YXIpO1xufSlcbi50aGVuKCgpID0+XG4gIGFwaS5nZXRDYXJkcygpXG4gIC50aGVuKGdldENhcmRzRnJvbUFwaSlcbiAgKVxuLmNhdGNoKGhhbmRsZUFwaUVycm9yKTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3RvcihyZW5kZXJlciwgc2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9XG4gIHJlbmRlckl0ZW1zID0gKGl0ZW1zKSA9PiB7XG4gICAgaXRlbXMuZm9yRWFjaCh0aGlzLmFkZEl0ZW0pO1xuICB9XG4gIGFkZEl0ZW0gPSAoZWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IG5ld0VsZW1lbnQgPSB0aGlzLl9yZW5kZXJlcihlbGVtZW50KTtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChuZXdFbGVtZW50KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkFwaSIsImhvc3QiLCJhdXRob3JpemF0aW9uIiwidGhpcyIsIl9ob3N0IiwiX2hlYWRlcnMiLCJ1c2VySWQiLCJ1bmRlZmluZWQiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImlkIiwiZmV0Y2giLCJoZWFkZXJzIiwidGhlbiIsIl9oYW5kbGVSZXNwb25zZSIsImRhdGEiLCJfaWQiLCJhdmF0YXIiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJhYm91dCIsImxpbmsiLCJDYXJkIiwiYXNzZXRzIiwibGlrZXMiLCJsaWtlZCIsImFkZExpa2UiLCJyZW1vdmVMaWtlIiwiZGVsZXRlQ2FyZCIsImhhbmRsZUVycm9yIiwiY29uZmlybURlbGV0ZSIsIl9jb25maXJtIiwiX2RlbGV0ZUNhcmRBcGkiLCJfZWxlbWVudCIsInJlbW92ZSIsIl9oYW5kbGVFcnJvciIsInF1ZXJ5U2VsZWN0b3IiLCJfY2FyZExpa2VTZWxlY3RvciIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIl9hY3RpdmVMaWtlQnV0dG9uQ2xhc3MiLCJfaXNsaWtlZCIsIl9saWtlQ291bnQiLCJsZW5ndGgiLCJfY2FyZExpa2VzQ291bnRlclNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJfcmVtb3ZlTGlrZUFwaSIsIl91cGRhdGVMaWtlcyIsImNhdGNoIiwiX2FkZExpa2VBcGkiLCJfbmFtZSIsIl9saW5rIiwiX2NhcmRTZWxlY3RvciIsImNhcmRTZWxlY3RvciIsIl9jYXJkVGVtcGxhdGVTZWxlY3RvciIsImNhcmRUZW1wbGF0ZVNlbGVjdG9yIiwiX2NhcmRUaXRsZVNlbGVjdG9yIiwiY2FyZFRpdGxlU2VsZWN0b3IiLCJfY2FyZEltYWdlU2VsZWN0b3IiLCJjYXJkSW1hZ2VTZWxlY3RvciIsImNhcmRMaWtlU2VsZWN0b3IiLCJjYXJkTGlrZUNvdW50ZXJTZWxlY3RvciIsIl9jYXJkRGVsZXRlU2VsZWN0b3IiLCJjYXJkRGVsZXRlU2VsZWN0b3IiLCJhY3RpdmVMaWtlQnV0dG9uQ2xhc3MiLCJfaGFuZGxlUGljdHVyZSIsIm9wZW5QaWN0dXJlIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiaXNDYXJkT3duZXIiLCJjYXJkSW1hZ2UiLCJjYXJkTGlrZUJ1dHRvbiIsImNhcmREZWxldGVCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUNhcmREZWxldGUiLCJfaGFuZGxlTGlrZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiX2FkZENhcmRFdmVudHMiLCJhZGQiLCJpbWFnZSIsInNyYyIsImFsdCIsImZvcm1TZWxlY3RvcnMiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImFjdGl2ZVBvcHVwQ2xhc3MiLCJjYXJkU2VsZWN0b3JzIiwiUG9wdXAiLCJzZWxlY3RvciIsImUiLCJrZXkiLCJjbG9zZSIsInRhcmdldCIsImNvbnRhaW5zIiwiX2Nsb3NlQnV0dG9uIiwiX2hhbmRsZUNsb3NlQnV0dG9uIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmVFdmVudExpc3RlbmVycyIsIl9oYW5kbGVPdmVybGF5Q2xvc2UiLCJfaGFuZGxlRXNjYXBlQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZVN1Ym1pdCIsInJlc2V0VmFsaWRhdGlvbiIsInZhbHVlcyIsInZhbHVlIiwiaW5wdXQiLCJfaW5wdXRzIiwiZmluZCIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwiX3NldElucHV0VmFsdWVzIiwiX3Jlc2V0VmFsaWRhdGlvbiIsIl9mb3JtIiwicmVzZXQiLCJfaGFuZGxlU3VibWl0IiwiYnV0dG9uVGV4dCIsIl9idXR0b24iLCJfYnV0dG9uVGV4dCIsImJpbmQiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiUG9wdXBXaXRoSW1hZ2UiLCJfdGl0bGUiLCJfaW1hZ2UiLCJzZXRBdHRyaWJ1dGUiLCJQb3B1cFdpdGhDb25maXJtYXRpb24iLCJidXR0b25TZWxlY3RvciIsImhhbmRsZUNvbmZpcm0iLCJfaGFuZGxlQ29uZmlybSIsIl9idXR0b25FbGVtZW50IiwiVXNlckluZm8iLCJ1c2VyTmFtZVNlbGVjdG9yIiwiZGVzY3JpcHRpb25TZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX25hbWVFbGVtZW50IiwiX2Jpb0VsZW1lbnQiLCJfaW1hZ2VFbGVtZW50IiwiYmlvIiwiRm9ybVZhbGlkYXRvciIsImZvcm0iLCJfaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiX2JvdW5kSGFuZGxlSW5wdXQiLCJfaGFuZGxlSW5wdXQiLCJfaW5wdXRFbGVtZW50cyIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9oaWRlRXJyb3IiLCJfZGlzYWJsZUJ1dHRvbiIsIl92YWxpZGF0ZUlucHV0IiwiX3NldEJ1dHRvblN0YXRlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9zaG93RXJyb3IiLCJlcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9lbmFibGVCdXR0b24iLCJzb21lIiwiZGlzYWJsZWQiLCJhcGkiLCJwcm9jZXNzIiwiaGFuZGxlQXBpRXJyb3IiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwicHJvZmlsZVZpZXciLCJwaWN0dXJlUG9wdXAiLCJlZGl0UG9wdXAiLCJwcmV2ZW50RGVmYXVsdCIsInRvZ2dsZUJ1dHRvblRleHQiLCJnZXRJbnB1dFZhbHVlcyIsInVwZGF0ZVVzZXIiLCJzZXRVc2VySW5mbyIsImZpbmFsbHkiLCJwcm9maWxlRm9ybVZhbGlkYXRvciIsImFkZFBvcHVwIiwidGl0bGUiLCJhZGRDYXJkIiwiZ2FsbGVyeVNlY3Rpb24iLCJhZGRJdGVtIiwicGljdHVyZUZvcm1WYWxpZGF0b3IiLCJhdmF0YXJQb3B1cCIsInVybCIsInNldFVzZXJBdmF0YXIiLCJ1cGRhdGVVc2VyQXZhdGFyIiwiYXZhdGFyRm9ybVZhbGlkYXRvciIsImNvbmZpcm1Qb3B1cCIsInByb2ZpbGVGb3JtRWxlbWVudCIsInBpY3R1cmVGb3JtRWxlbWVudCIsImF2YXRhckZvcm1FbGVtZW50IiwicmVuZGVyZXIiLCJpdGVtcyIsImVsZW1lbnQiLCJuZXdFbGVtZW50IiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInByZXBlbmQiLCJjYXJkQXBpRnVuY3Rpb25zIiwib3BlbiIsIm9iaiIsImdlbmVyYXRlQ2FyZCIsIm93bmVyIiwiZ2V0Q2FyZHNGcm9tQXBpIiwiY2FyZHMiLCJyZW5kZXJJdGVtcyIsInJldmVyc2UiLCJlZGl0QnV0dG9uIiwiYWRkQnV0dG9uIiwiYXZhdGFyQnV0dG9uIiwic3RvcFByb3BhZ2F0aW9uIiwiZ2V0VXNlckluZm8iLCJlbmFibGVWYWxpZGF0aW9uIiwiZ2V0Q2FyZHMiXSwic291cmNlUm9vdCI6IiJ9