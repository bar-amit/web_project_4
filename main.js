!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardSelector=n.cardSelector,this._cardTemplateSelector=n.cardTemplateSelector,this._cardTitleSelector=n.cardTitleSelector,this._cardImageSelector=n.cardImageSelector,this._cardLikeSelector=n.cardLikeSelector,this._cardDeleteSelector=n.cardDeleteSelector,this._handleLike=this._handleLikeClick.bind(this),this._handleDelete=this._handleCardDelete.bind(this),this._handlePicture=n.openPicture,this._activeLikeButtonClass=n.activeLikeButtonClass}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(this._cardSelector).cloneNode(!0)}},{key:"_handleCardDelete",value:function(){this._element.remove(),this._element=null}},{key:"_handleLikeClick",value:function(){this._element.querySelector(this._cardLikeSelector).classList.toggle(this._activeLikeButtonClass)}},{key:"_addCardEvents",value:function(){var e=this._element.querySelector(this._cardImageSelector),t=this._element.querySelector(this._cardLikeSelector),n=this._element.querySelector(this._cardDeleteSelector);e.addEventListener("click",this._handlePicture),t.addEventListener("click",this._handleLike),n.addEventListener("click",this._handleDelete)}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._addCardEvents(),this._element.querySelector(this._cardTitleSelector).textContent=this._name;var e=this._element.querySelector(this._cardImageSelector);return e.src=this._link,e.alt=this._name,this._element}}])&&e(n.prototype,r),t}(),n={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_error",errorClass:"form__input-error_visible"},r="popup_visible",o={cardSelector:".card",cardTemplateSelector:".card__template",cardTitleSelector:".card__title",cardImageSelector:".card__image",cardLikeSelector:".card__like-button",cardDeleteSelector:".card__delete-button",activeLikeButtonClass:"card__like-button_active"};function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_handleEscapeClose",(function(e){"Escape"===e.key&&n.close()})),a(this,"_handleOverlayClose",(function(e){e.target.classList.contains(r)&&n.close()})),this._element=document.querySelector(t),this._closeButton=this._element.querySelector(".popup__close-button"),this._handleCloseButton=function(){return n.close()}}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add(r),this.setEventListeners()}},{key:"close",value:function(){this._element.classList.remove(r),this.removeEventListeners()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this._handleCloseButton),this._element.addEventListener("click",this._handleOverlayClose),document.addEventListener("keydown",this._handleEscapeClose)}},{key:"removeEventListeners",value:function(){this._closeButton.removeEventListener("click",this._handleCloseButton),this._element.removeEventListener("click",this._handleOverlayClose),document.removeEventListener("keydown",this._handleEscapeClose)}}])&&i(t.prototype,n),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function f(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return p(e)}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e,t,n){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},d(e,t,n||e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(i,e);var t,r,o=(t=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=h(t);if(r){var o=h(this).constructor;e=Reflect.construct(n,arguments,o)}else e=n.apply(this,arguments);return f(this,e)});function i(e,t){var r,a,l,c,s,f=t.handleSubmit,m=t.resetValidation;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),_(p(s=o.call(this,e)),"_setInputValues",(function(e){for(var t=function(){var e,t,o=(e=r[n],t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,l=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(l)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1],l=s._inputs.find((function(e){return e.name===i}));void 0!==l&&(l.value=a)},n=0,r=Object.entries(e);n<r.length;n++)t()})),_(p(s),"_getInputValues",(function(){var e={};return s._inputs.forEach((function(t){e[t.name]=t.value})),e})),_(p(s),"open",(function(e){s.setEventListeners(),s._setInputValues(e),d((r=p(s),h(i.prototype)),"open",r).call(r)})),_(p(s),"close",(function(){s.removeEventListeners(),s._resetValidation(),d((a=p(s),h(i.prototype)),"close",a).call(a),s._form.reset()})),_(p(s),"setEventListeners",(function(){s._element.addEventListener("submit",s._handleSubmit),d((l=p(s),h(i.prototype)),"setEventListeners",l).call(l)})),_(p(s),"removeEventListeners",(function(){s._element.removeEventListener("submit",s._handleSubmit),d((c=p(s),h(i.prototype)),"removeEventListeners",c).call(c)})),s._handleSubmit=f.bind(p(s)),s._resetValidation=m,s._inputs=Array.from(s._element.querySelectorAll(n.inputSelector)),s._form=s._element.querySelector(n.formSelector),s}return i}(l);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},b(e,t,n||e)}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._title=t._element.querySelector(".popup__picture-title"),t._image=t._element.querySelector(".popup__picture"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._title.textContent=n,this._image.setAttribute("src",t),this._image.setAttribute("alt",n),b(E(a.prototype),"open",this).call(this)}}])&&v(t.prototype,n),a}(l);function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){var n=t.userNameSelector,r=t.descriptionSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._bioElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,bio:this._bioElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.bio;this._nameElement.textContent=t,this._bioElement.textContent=n}}])&&w(t.prototype,n),e}();function L(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n){var r=t.inputSelector,o=t.submitButtonSelector,i=t.inactiveButtonClass,a=t.inputErrorClass,l=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._inputSelector=r,this._submitButtonSelector=o,this._inactiveButtonClass=i,this._inputErrorClass=a,this._errorClass=l,this._boundHandleInput=this._handleInput.bind(this)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._inputElements=this._form.querySelectorAll(this._inputSelector),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputElements.forEach((function(t){e._hideError(t)})),this._disableButton()}},{key:"_handleInput",value:function(e){this._validateInput(e.target),this._setButtonState()}},{key:"_validateInput",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_hideError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_showError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_setEventListeners",value:function(){var e=this;this._inputElements.forEach((function(t){return t.addEventListener("input",e._boundHandleInput)}))}},{key:"_setButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputElements).some((function(e){return!e.validity.valid}))}},{key:"_disableButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}}])&&C(t.prototype,n),e}();function P(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function B(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?P(Object(n),!0).forEach((function(t){I(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):P(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function I(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var q=new O({userNameSelector:".profile__name",descriptionSelector:".profile__bio"}),T=new k(".popup_name_picture"),x=new m(".popup_name_edit-profile",{handleSubmit:function(e){e.preventDefault();var t=this._getInputValues(),n=t.name,r=t.bio;q.setUserInfo({name:n,bio:r}),this.close()},resetValidation:function(){return A.resetValidation()}}),D=new m(".popup_name_new-place",{handleSubmit:function(e){e.preventDefault();var t=this._getInputValues(),n=t.title,r=t.link;N.addItem({name:n,link:r}),this.close()},resetValidation:function(){return U.resetValidation()}}),R=document.querySelector(".form_name_edit-profile"),V=document.querySelector(".popup_name_new-place"),A=new j(n,R),U=new j(n,V),N=new function e(t,n){var r=this,o=t.items,i=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),L(this,"renderItems",(function(){r._items.forEach(r.addItem)})),L(this,"addItem",(function(e){var t=r._renderer(e);r._container.prepend(t)})),this._items=o,this._renderer=i,this._container=document.querySelector(n)}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(e){return new t(e,B(B({},o),{},{openPicture:function(){return T.open(e)}})).generateCard()}},".gallery__container");N.renderItems();var M=document.querySelector(".profile__edit-button"),H=document.querySelector(".profile__add-button");M.addEventListener("click",(function(e){e.stopPropagation();var t=q.getUserInfo(),n=t.name,r=t.bio;x.open({name:n,bio:r})})),H.addEventListener("click",(function(e){e.stopPropagation(),D.open({})})),A.enableValidation(),U.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVAsRUFBT0EsS0FBTThGLEVBQWIsRUFBYUEsSUFDYjZCLEVBQVVvQixLQUFLLENBQUMvSSxLQUFBQSxFQUFNOEYsSUFBQUEsT0FQeEJxRCxFQUFVaEgsaUJBQWlCLFNBVzNCLFNBQThCa0IsR0FDNUJBLEVBQUUrRixrQkFFRnBCLEVBQVNlLEtBQUssT0FPaEJoQixFQUFxQnVCLG1CQUNyQmxCLEVBQXFCa0IsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9WYWxpZGF0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKGRhdGEsIGFzc2V0cykge1xuXG4gICAgLy9kYXRhXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuXG4gICAgLy8gc2VsZWN0b3JzXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gYXNzZXRzLmNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkVGVtcGxhdGVTZWxlY3RvciA9IGFzc2V0cy5jYXJkVGVtcGxhdGVTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkVGl0bGVTZWxlY3RvciA9IGFzc2V0cy5jYXJkVGl0bGVTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkSW1hZ2VTZWxlY3RvciA9IGFzc2V0cy5jYXJkSW1hZ2VTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkTGlrZVNlbGVjdG9yID0gYXNzZXRzLmNhcmRMaWtlU2VsZWN0b3I7XG4gICAgdGhpcy5fY2FyZERlbGV0ZVNlbGVjdG9yID0gYXNzZXRzLmNhcmREZWxldGVTZWxlY3RvcjtcblxuICAgIC8vIGJvdW5kIGhhbmRsZXJzOlxuICAgIHRoaXMuX2hhbmRsZUxpa2UgPSB0aGlzLl9oYW5kbGVMaWtlQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLl9oYW5kbGVEZWxldGUgPSB0aGlzLl9oYW5kbGVDYXJkRGVsZXRlLmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLl9oYW5kbGVQaWN0dXJlID0gYXNzZXRzLm9wZW5QaWN0dXJlO1xuXG4gICAgdGhpcy5fYWN0aXZlTGlrZUJ1dHRvbkNsYXNzID0gYXNzZXRzLmFjdGl2ZUxpa2VCdXR0b25DbGFzcztcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRUZW1wbGF0ZVNlbGVjdG9yKS5jb250ZW50O1xuICAgIHJldHVybiBjYXJkVGVtcGxhdGUucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpLmNsb25lTm9kZSh0cnVlKTtcbiAgfVxuXG4gIF9oYW5kbGVDYXJkRGVsZXRlKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gIH1cblxuICBfaGFuZGxlTGlrZUNsaWNrKCkge1xuICAgIGNvbnN0IGxpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZExpa2VTZWxlY3Rvcik7XG4gICAgbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKHRoaXMuX2FjdGl2ZUxpa2VCdXR0b25DbGFzcyk7XG4gIH1cblxuICBfYWRkQ2FyZEV2ZW50cygpe1xuICAgIGNvbnN0IGNhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkSW1hZ2VTZWxlY3Rvcik7XG4gICAgY29uc3QgY2FyZExpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZExpa2VTZWxlY3Rvcik7XG4gICAgY29uc3QgY2FyZERlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkRGVsZXRlU2VsZWN0b3IpO1xuXG4gICAgY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlUGljdHVyZSk7XG4gICAgY2FyZExpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVMaWtlKTtcbiAgICBjYXJkRGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlRGVsZXRlKTtcblxuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCl7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG5cbiAgICB0aGlzLl9hZGRDYXJkRXZlbnRzKCk7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRUaXRsZVNlbGVjdG9yKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgY29uc3QgaW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZEltYWdlU2VsZWN0b3IpO1xuICAgIGltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgaW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCIvKlxuICBEYXRhOlxuKi9cblxuY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICB7XG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYWtlLWxvdWlzZS5qcGdcIlxuICB9LFxuICB7XG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCJcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIlxuICB9LFxuICB7XG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3Zhbm9pc2UuanBnXCJcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCJcbiAgfVxuXTtcblxuXG4vKlxuICBET00gZWxlbWVudHM6XG4qL1xuXG4vLyBGb3Jtc1xuY29uc3QgcHJvZmlsZUZvcm1TZWxlY3RvciA9ICcuZm9ybV9uYW1lX2VkaXQtcHJvZmlsZSc7XG5jb25zdCBwaWN0dXJlRm9ybVNlbGVjdG9yID0gJy5wb3B1cF9uYW1lX25ldy1wbGFjZSc7XG5jb25zdCBmb3JtU2VsZWN0b3JzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLmZvcm1cIixcbiAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX3NhdmUtYnV0dG9uXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwiZm9ybV9fc2F2ZS1idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcImZvcm1fX2lucHV0X2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXQtZXJyb3JfdmlzaWJsZVwiXG59XG5cbi8vIEJ1dHRvbnNcbmNvbnN0IGVkaXRCdXR0b25TZWxlY3RvciA9ICcucHJvZmlsZV9fZWRpdC1idXR0b24nO1xuY29uc3QgYWRkQnV0dG9uU2VsZWN0b3IgPSAnLnByb2ZpbGVfX2FkZC1idXR0b24nO1xuXG4vLyBQcm9maWxlXG5jb25zdCBwcm9maWxlU2VsZWN0b3JzID0ge1xuICB1c2VyTmFtZVNlbGVjdG9yOiAnLnByb2ZpbGVfX25hbWUnLFxuICBkZXNjcmlwdGlvblNlbGVjdG9yOiAnLnByb2ZpbGVfX2Jpbydcbn07XG5cbi8vIFBvcHVwc1xuY29uc3QgZWRpdFByb2ZpbGVQb3B1cFNlbGVjdG9yID0gJy5wb3B1cF9uYW1lX2VkaXQtcHJvZmlsZSc7XG5jb25zdCBhZGRDYXJkUG9wdXBTZWxlY3RvciA9ICcucG9wdXBfbmFtZV9uZXctcGxhY2UnO1xuY29uc3QgcGljdHVyZVBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX25hbWVfcGljdHVyZSc7XG5jb25zdCBhY3RpdmVQb3B1cENsYXNzID0gXCJwb3B1cF92aXNpYmxlXCI7XG5jb25zdCBwb3B1cENsb3NlQnV0dG9uU2VsZWN0b3IgPSAnLnBvcHVwX19jbG9zZS1idXR0b24nO1xuY29uc3QgcG9wdXBUaXRsZVNlbGVjdG9yID0gJy5wb3B1cF9fcGljdHVyZS10aXRsZSc7XG5jb25zdCBwb3B1cEltYWdlU2VsZWN0b3IgPSAnLnBvcHVwX19waWN0dXJlJztcblxuXG4vLyBDYXJkc1xuY29uc3QgY2FyZFNlbGVjdG9ycyA9IHtcbiAgY2FyZFNlbGVjdG9yOiBcIi5jYXJkXCIsXG4gIGNhcmRUZW1wbGF0ZVNlbGVjdG9yOiBcIi5jYXJkX190ZW1wbGF0ZVwiLFxuICBjYXJkVGl0bGVTZWxlY3RvcjogXCIuY2FyZF9fdGl0bGVcIixcbiAgY2FyZEltYWdlU2VsZWN0b3I6IFwiLmNhcmRfX2ltYWdlXCIsXG4gIGNhcmRMaWtlU2VsZWN0b3I6IFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIsXG4gIGNhcmREZWxldGVTZWxlY3RvcjogXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiLFxuICBhY3RpdmVMaWtlQnV0dG9uQ2xhc3M6IFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCJcbn1cbmNvbnN0IGNhcmRzQ29udGFpbmVyU2VsZWN0b3IgPSAnLmdhbGxlcnlfX2NvbnRhaW5lcic7XG5cbmV4cG9ydCB7Zm9ybVNlbGVjdG9ycywgYWN0aXZlUG9wdXBDbGFzcywgY2FyZFNlbGVjdG9ycywgZWRpdEJ1dHRvblNlbGVjdG9yLCBhZGRCdXR0b25TZWxlY3RvciwgZWRpdFByb2ZpbGVQb3B1cFNlbGVjdG9yLCBhZGRDYXJkUG9wdXBTZWxlY3RvciwgcGljdHVyZVBvcHVwU2VsZWN0b3IsIGNhcmRzQ29udGFpbmVyU2VsZWN0b3IsIHByb2ZpbGVGb3JtU2VsZWN0b3IsIHBpY3R1cmVGb3JtU2VsZWN0b3IsIGluaXRpYWxDYXJkcywgcG9wdXBDbG9zZUJ1dHRvblNlbGVjdG9yLCBwb3B1cFRpdGxlU2VsZWN0b3IsIHBvcHVwSW1hZ2VTZWxlY3RvciwgcHJvZmlsZVNlbGVjdG9yc307XG4iLCJpbXBvcnQgeyBhY3RpdmVQb3B1cENsYXNzLCBwb3B1cENsb3NlQnV0dG9uU2VsZWN0b3IgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xuICAgIHRoaXMuX2VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cENsb3NlQnV0dG9uU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUNsb3NlQnV0dG9uID0gKCkgPT4gdGhpcy5jbG9zZSgpO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKGFjdGl2ZVBvcHVwQ2xhc3MpO1xuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoYWN0aXZlUG9wdXBDbGFzcyk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVycygpO1xuICB9XG4gIF9oYW5kbGVFc2NhcGVDbG9zZSA9IChlKSA9PiB7XG4gICAgaWYoZS5rZXk9PT0nRXNjYXBlJylcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgfVxuICBfaGFuZGxlT3ZlcmxheUNsb3NlID0gKGUpID0+IHtcbiAgICBpZihlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYWN0aXZlUG9wdXBDbGFzcykpXG4gICAgICB0aGlzLmNsb3NlKCk7XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVDbG9zZUJ1dHRvbik7XG4gICAgdGhpcy5fZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY2FwZUNsb3NlKTtcbiAgfVxuICByZW1vdmVFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2hhbmRsZUNsb3NlQnV0dG9uKTtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlT3ZlcmxheUNsb3NlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcbmltcG9ydCB7IGZvcm1TZWxlY3RvcnMgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3IsIHtoYW5kbGVTdWJtaXQsIHJlc2V0VmFsaWRhdGlvbn0pIHtcbiAgICBzdXBlcihzZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gaGFuZGxlU3VibWl0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5fcmVzZXRWYWxpZGF0aW9uID0gcmVzZXRWYWxpZGF0aW9uO1xuICAgIHRoaXMuX2lucHV0cyA9IEFycmF5LmZyb20odGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGZvcm1TZWxlY3RvcnMuaW5wdXRTZWxlY3RvcikpO1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9ycy5mb3JtU2VsZWN0b3IpO1xuICB9XG4gIF9zZXRJbnB1dFZhbHVlcyA9ICh2YWx1ZXMpID0+IHtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh2YWx1ZXMpKSB7XG4gICAgICBjb25zdCBpbnB1dCA9IHRoaXMuX2lucHV0cy5maW5kKGlucHV0ID0+IGlucHV0Lm5hbWUgPT09IGtleSk7XG4gICAgICBpZih0eXBlb2YgaW5wdXQgIT09ICd1bmRlZmluZWQnKVxuICAgICAgICBpbnB1dC52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuICBfZ2V0SW5wdXRWYWx1ZXMgPSAoKSA9PiB7XG4gICAgY29uc3QgdmFsdWVzID0ge307XG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgdmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfVxuICBvcGVuID0gKHZhbHVlcykgPT4ge1xuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9zZXRJbnB1dFZhbHVlcyh2YWx1ZXMpO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxuICBjbG9zZSA9ICgpID0+IHtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fcmVzZXRWYWxpZGF0aW9uKCk7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5fZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVTdWJtaXQpO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVTdWJtaXQpO1xuICAgIHN1cGVyLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xuaW1wb3J0IHsgcG9wdXBUaXRsZVNlbGVjdG9yLCBwb3B1cEltYWdlU2VsZWN0b3IgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yKSB7XG4gICAgc3VwZXIoc2VsZWN0b3IpO1xuICAgIHRoaXMuX3RpdGxlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwVGl0bGVTZWxlY3Rvcik7XG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBJbWFnZVNlbGVjdG9yKTtcbiAgfVxuICBvcGVuKHtsaW5rLCBuYW1lfSkge1xuICAgIHRoaXMuX3RpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9pbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGxpbmspO1xuICAgIHRoaXMuX2ltYWdlLnNldEF0dHJpYnV0ZSgnYWx0JywgbmFtZSk7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHt1c2VyTmFtZVNlbGVjdG9yLCBkZXNjcmlwdGlvblNlbGVjdG9yfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyTmFtZVNlbGVjdG9yKTtcbiAgICB0aGlzLl9iaW9FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvblNlbGVjdG9yKTtcbiAgfVxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge25hbWU6IHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50LCBiaW86IHRoaXMuX2Jpb0VsZW1lbnQudGV4dENvbnRlbnR9O1xuICB9XG4gIHNldFVzZXJJbmZvKHtuYW1lLGJpb30pIHtcbiAgICB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5fYmlvRWxlbWVudC50ZXh0Q29udGVudCA9IGJpbztcbiAgfVxufVxuIiwiY2xhc3MgVmFsaWRhdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHtpbnB1dFNlbGVjdG9yLCBzdWJtaXRCdXR0b25TZWxlY3RvciwgaW5hY3RpdmVCdXR0b25DbGFzcywgaW5wdXRFcnJvckNsYXNzLCBlcnJvckNsYXNzfSwgZm9ybSkge1xuICAgIHRoaXMuX2Zvcm0gPSBmb3JtO1xuXG4gICAgLy8gc2VsZWN0b3JzXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzdWJtaXRCdXR0b25TZWxlY3RvcjtcblxuICAgIC8vIGNsYXNzZXNcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBpbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGVycm9yQ2xhc3M7XG5cbiAgICB0aGlzLl9ib3VuZEhhbmRsZUlucHV0ID0gdGhpcy5faGFuZGxlSW5wdXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5faW5wdXRFbGVtZW50cyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKGlucHV0PT57XG4gICAgICB0aGlzLl9oaWRlRXJyb3IoaW5wdXQpO1xuICAgIH0pO1xuICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcbiAgfVxuXG4gIF9oYW5kbGVJbnB1dChlKXtcbiAgICB0aGlzLl92YWxpZGF0ZUlucHV0KGUudGFyZ2V0KTtcbiAgICB0aGlzLl9zZXRCdXR0b25TdGF0ZSgpO1xuICB9XG5cbiAgX3ZhbGlkYXRlSW5wdXQoaW5wdXQpIHtcbiAgICBpZihpbnB1dC52YWxpZGl0eS52YWxpZCl7XG4gICAgICB0aGlzLl9oaWRlRXJyb3IoaW5wdXQpO1xuICAgIH1cbiAgICBlbHNle1xuICAgICAgdGhpcy5fc2hvd0Vycm9yKGlucHV0KTtcbiAgICB9XG4gIH1cblxuICBfaGlkZUVycm9yKGlucHV0KSB7XG4gICAgY29uc3QgZXJyb3IgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xuICAgIGVycm9yLnRleHRDb250ZW50ID0gJyc7XG4gICAgZXJyb3IuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gIH1cblxuICBfc2hvd0Vycm9yKGlucHV0KSB7XG4gICAgY29uc3QgZXJyb3IgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xuICAgIGVycm9yLnRleHRDb250ZW50ID0gaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2U7XG4gICAgZXJyb3IuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKGlucHV0ID0+IGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgdGhpcy5fYm91bmRIYW5kbGVJbnB1dCkpO1xuICB9XG5cbiAgX3NldEJ1dHRvblN0YXRlKCkge1xuICAgIGlmKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLl9kaXNhYmxlQnV0dG9uKCk7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICB0aGlzLl9lbmFibGVCdXR0b24oKTtcbiAgICB9XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuX2lucHV0RWxlbWVudHMpLnNvbWUoaW5wdXQ9PiFpbnB1dC52YWxpZGl0eS52YWxpZCk7XG4gIH1cblxuICBfZGlzYWJsZUJ1dHRvbigpIHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XG4gIH1cblxuICBfZW5hYmxlQnV0dG9uKCkge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVmFsaWRhdGlvbjtcbiIsImltcG9ydCAnLi9pbmRleC5jc3MnO1xuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkJztcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybSc7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZSc7XG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mbyc7XG5pbXBvcnQgU2VjdGlvbiAgZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uJztcbmltcG9ydCBWYWxpZGF0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvVmFsaWRhdGlvbic7XG5pbXBvcnQge3Byb2ZpbGVTZWxlY3RvcnMsIGZvcm1TZWxlY3RvcnMsIGNhcmRTZWxlY3RvcnMsIGVkaXRCdXR0b25TZWxlY3RvciwgYWRkQnV0dG9uU2VsZWN0b3IsIGVkaXRQcm9maWxlUG9wdXBTZWxlY3RvciwgYWRkQ2FyZFBvcHVwU2VsZWN0b3IsIHBpY3R1cmVQb3B1cFNlbGVjdG9yLCBjYXJkc0NvbnRhaW5lclNlbGVjdG9yLCBwcm9maWxlRm9ybVNlbGVjdG9yLCBwaWN0dXJlRm9ybVNlbGVjdG9yLCBpbml0aWFsQ2FyZHN9IGZyb20gJy4uL2NvbXBvbmVudHMvY29uc3RhbnRzJ1xuXG4vKlxuICBQcm9maWxlOlxuKi9cblxuY29uc3QgcHJvZmlsZVZpZXcgPSBuZXcgVXNlckluZm8ocHJvZmlsZVNlbGVjdG9ycyk7XG5cbi8qXG4gIFBvcHVwczpcbiovXG5cbmNvbnN0IHBpY3R1cmVQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShwaWN0dXJlUG9wdXBTZWxlY3Rvcik7XG5jb25zdCBlZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShlZGl0UHJvZmlsZVBvcHVwU2VsZWN0b3IsIHtoYW5kbGVTdWJtaXQ6IGhhbmRsZVByb2ZpbGVTdWJtaXQsIHJlc2V0VmFsaWRhdGlvbjogKCkgPT4gcHJvZmlsZUZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCl9KTtcbmNvbnN0IGFkZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oYWRkQ2FyZFBvcHVwU2VsZWN0b3IsIHtoYW5kbGVTdWJtaXQ6IGhhbmRsZVBsYWNlU3VibWl0LCByZXNldFZhbGlkYXRpb246ICgpID0+IHBpY3R1cmVGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpfSk7XG5cblxuLypcbiAgRm9ybXM6XG4qL1xuXG5jb25zdCBwcm9maWxlRm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVGb3JtU2VsZWN0b3IpO1xuY29uc3QgcGljdHVyZUZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwaWN0dXJlRm9ybVNlbGVjdG9yKTtcblxuY29uc3QgcHJvZmlsZUZvcm1WYWxpZGF0b3IgPSBuZXcgVmFsaWRhdGlvbihmb3JtU2VsZWN0b3JzLCBwcm9maWxlRm9ybUVsZW1lbnQpO1xuY29uc3QgcGljdHVyZUZvcm1WYWxpZGF0b3IgPSBuZXcgVmFsaWRhdGlvbihmb3JtU2VsZWN0b3JzLCBwaWN0dXJlRm9ybUVsZW1lbnQpO1xuXG4vLyBQbGFjZSBmb3JtIGRhdGEgaGFuZGxlclxuZnVuY3Rpb24gaGFuZGxlUGxhY2VTdWJtaXQoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgY29uc3Qge3RpdGxlOiBuYW1lLCBsaW5rfSA9IHRoaXMuX2dldElucHV0VmFsdWVzKCk7XG4gIGdhbGxlcnlTZWN0aW9uLmFkZEl0ZW0oe25hbWUsIGxpbmt9KTtcblxuICB0aGlzLmNsb3NlKCk7XG59XG5cbi8vIFByb2ZpbGUgZm9ybSBkYXRhIGhhbmRsZXJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVTdWJtaXQoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgY29uc3Qge25hbWUsIGJpb30gPSB0aGlzLl9nZXRJbnB1dFZhbHVlcygpO1xuICBwcm9maWxlVmlldy5zZXRVc2VySW5mbyh7bmFtZSwgYmlvfSlcblxuICB0aGlzLmNsb3NlKCk7XG59XG5cbi8qXG4gIENhcmRzOlxuKi9cblxuY29uc3QgZ2FsbGVyeVNlY3Rpb24gPSBuZXcgU2VjdGlvbih7aXRlbXM6IGluaXRpYWxDYXJkcywgcmVuZGVyZXI6IGFkZE5ld0NhcmR9LCBjYXJkc0NvbnRhaW5lclNlbGVjdG9yKTtcbmdhbGxlcnlTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XG5cbmZ1bmN0aW9uIGFkZE5ld0NhcmQoZGF0YSl7XG4gIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChkYXRhLCB7Li4uY2FyZFNlbGVjdG9ycywgb3BlblBpY3R1cmU6ICgpID0+IHBpY3R1cmVQb3B1cC5vcGVuKGRhdGEpfSk7XG4gIHJldHVybiBuZXdDYXJkLmdlbmVyYXRlQ2FyZCgpO1xufVxuXG4vKlxuICBQYWdlIEJ1dHRvbnM6XG4qL1xuXG5jb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlZGl0QnV0dG9uU2VsZWN0b3IpO1xuY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhZGRCdXR0b25TZWxlY3Rvcik7XG5cbmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVFZGl0QnV0dG9uQ2xpY2spO1xuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQWRkQnV0dG9uQ2xpY2spO1xuXG4vLyBFZGl0IGNsaWNrIGhhbmRsZXJcbmZ1bmN0aW9uIGhhbmRsZUVkaXRCdXR0b25DbGljayhlKSB7XG4gIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgY29uc3Qge25hbWUsIGJpb30gPSBwcm9maWxlVmlldy5nZXRVc2VySW5mbygpO1xuICBlZGl0UG9wdXAub3Blbih7bmFtZSwgYmlvfSk7XG59XG5cbi8vIEFkZCBjbGljayBoYW5kbGVyXG5mdW5jdGlvbiBoYW5kbGVBZGRCdXR0b25DbGljayhlKSB7XG4gIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgYWRkUG9wdXAub3Blbih7fSk7XG59XG5cbi8qXG4gIFZhbGlkYXRpb246XG4qL1xuXG5wcm9maWxlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5waWN0dXJlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3Ioe2l0ZW1zLCByZW5kZXJlcn0sIHNlbGVjdG9yKSB7XG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9XG4gIHJlbmRlckl0ZW1zID0gKCkgPT4ge1xuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2godGhpcy5hZGRJdGVtKTtcbiAgfVxuICBhZGRJdGVtID0gKGVsZW1lbnQpID0+IHtcbiAgICBjb25zdCBuZXdFbGVtZW50ID0gdGhpcy5fcmVuZGVyZXIoZWxlbWVudCk7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQobmV3RWxlbWVudCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJDYXJkIiwiZGF0YSIsImFzc2V0cyIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZFNlbGVjdG9yIiwiY2FyZFNlbGVjdG9yIiwiX2NhcmRUZW1wbGF0ZVNlbGVjdG9yIiwiY2FyZFRlbXBsYXRlU2VsZWN0b3IiLCJfY2FyZFRpdGxlU2VsZWN0b3IiLCJjYXJkVGl0bGVTZWxlY3RvciIsIl9jYXJkSW1hZ2VTZWxlY3RvciIsImNhcmRJbWFnZVNlbGVjdG9yIiwiX2NhcmRMaWtlU2VsZWN0b3IiLCJjYXJkTGlrZVNlbGVjdG9yIiwiX2NhcmREZWxldGVTZWxlY3RvciIsImNhcmREZWxldGVTZWxlY3RvciIsIl9oYW5kbGVMaWtlIiwiX2hhbmRsZUxpa2VDbGljayIsImJpbmQiLCJfaGFuZGxlRGVsZXRlIiwiX2hhbmRsZUNhcmREZWxldGUiLCJfaGFuZGxlUGljdHVyZSIsIm9wZW5QaWN0dXJlIiwiX2FjdGl2ZUxpa2VCdXR0b25DbGFzcyIsImFjdGl2ZUxpa2VCdXR0b25DbGFzcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsInJlbW92ZSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImNhcmRJbWFnZSIsImNhcmRMaWtlQnV0dG9uIiwiY2FyZERlbGV0ZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJfZ2V0VGVtcGxhdGUiLCJfYWRkQ2FyZEV2ZW50cyIsInRleHRDb250ZW50IiwiaW1hZ2UiLCJzcmMiLCJhbHQiLCJmb3JtU2VsZWN0b3JzIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJhY3RpdmVQb3B1cENsYXNzIiwiY2FyZFNlbGVjdG9ycyIsIlBvcHVwIiwic2VsZWN0b3IiLCJlIiwia2V5IiwiY2xvc2UiLCJ0YXJnZXQiLCJjb250YWlucyIsIl9jbG9zZUJ1dHRvbiIsIl9oYW5kbGVDbG9zZUJ1dHRvbiIsImFkZCIsInNldEV2ZW50TGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJfaGFuZGxlT3ZlcmxheUNsb3NlIiwiX2hhbmRsZUVzY2FwZUNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXQiLCJyZXNldFZhbGlkYXRpb24iLCJ2YWx1ZXMiLCJ2YWx1ZSIsImlucHV0IiwiX2lucHV0cyIsImZpbmQiLCJPYmplY3QiLCJlbnRyaWVzIiwiZm9yRWFjaCIsIl9zZXRJbnB1dFZhbHVlcyIsIl9yZXNldFZhbGlkYXRpb24iLCJfZm9ybSIsInJlc2V0IiwiX2hhbmRsZVN1Ym1pdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJQb3B1cFdpdGhJbWFnZSIsIl90aXRsZSIsIl9pbWFnZSIsInNldEF0dHJpYnV0ZSIsIlVzZXJJbmZvIiwidXNlck5hbWVTZWxlY3RvciIsImRlc2NyaXB0aW9uU2VsZWN0b3IiLCJfbmFtZUVsZW1lbnQiLCJfYmlvRWxlbWVudCIsImJpbyIsIlZhbGlkYXRpb24iLCJmb3JtIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9ib3VuZEhhbmRsZUlucHV0IiwiX2hhbmRsZUlucHV0IiwiX2lucHV0RWxlbWVudHMiLCJfYnV0dG9uRWxlbWVudCIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9oaWRlRXJyb3IiLCJfZGlzYWJsZUJ1dHRvbiIsIl92YWxpZGF0ZUlucHV0IiwiX3NldEJ1dHRvblN0YXRlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9zaG93RXJyb3IiLCJlcnJvciIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGFzSW52YWxpZElucHV0IiwiX2VuYWJsZUJ1dHRvbiIsInNvbWUiLCJkaXNhYmxlZCIsInByb2ZpbGVWaWV3IiwicGljdHVyZVBvcHVwIiwiZWRpdFBvcHVwIiwicHJldmVudERlZmF1bHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJzZXRVc2VySW5mbyIsInByb2ZpbGVGb3JtVmFsaWRhdG9yIiwiYWRkUG9wdXAiLCJ0aXRsZSIsImdhbGxlcnlTZWN0aW9uIiwiYWRkSXRlbSIsInBpY3R1cmVGb3JtVmFsaWRhdG9yIiwicHJvZmlsZUZvcm1FbGVtZW50IiwicGljdHVyZUZvcm1FbGVtZW50IiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsImVsZW1lbnQiLCJuZXdFbGVtZW50IiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInByZXBlbmQiLCJvcGVuIiwiZ2VuZXJhdGVDYXJkIiwicmVuZGVySXRlbXMiLCJlZGl0QnV0dG9uIiwiYWRkQnV0dG9uIiwic3RvcFByb3BhZ2F0aW9uIiwiZ2V0VXNlckluZm8iLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==