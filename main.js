!function(){"use strict";function e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function t(t){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?e(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n=t.host,r=t.authorization;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._host=n,this._headers={authorization:r},this.userId=void 0}var n,o;return n=e,o=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("error: ".concat(e.status,", ").concat(e.statusText))}},{key:"getUserInfo",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"me";return fetch("".concat(this._host,"/users/").concat(t),{headers:this._headers}).then(this._handleResponse).then((function(t){return e.userId=t._id,t}))}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar"),{method:"PATCH",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({avatar:e})}).then(this._handleResponse)}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"updateUser",value:function(e){var n=e.name,r=e.about;return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:n,about:r})}).then(this._handleResponse)}},{key:"addCard",value:function(e){var n=e.name,r=e.link;return fetch("".concat(this._host,"/cards"),{method:"POST",headers:t(t({},this._headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:n,link:r})}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._host,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._host,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}],o&&r(n.prototype,o),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(){function e(t,n,r){var o=this,i=t.name,c=t.link,u=t.likes,l=t.liked,s=r.addLike,f=r.removeLike,h=r.deleteCard,d=r.handleError,p=r.confirmDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_handleCardDelete",(function(){o._confirm((function(){return o._deleteCardApi().then((function(){o._element.remove(),o._element=null}))}),o._handleError)})),a(this,"_updateLikes",(function(e){o._element.querySelector(o._cardLikeSelector).classList.toggle(o._activeLikeButtonClass),o._isliked=!o._isliked,o._likeCount=e.likes.length,o._element.querySelector(o._cardLikesCounterSelector).textContent="".concat(o._likeCount)})),a(this,"_handleLikeClick",(function(){o._isliked?o._removeLikeApi().then(o._updateLikes).catch(o._handleError):o._addLikeApi().then(o._updateLikes).catch(o._handleError)})),this._name=i,this._link=c,this._likeCount=u.length,this._isliked=l,this._cardSelector=n.cardSelector,this._cardTemplateSelector=n.cardTemplateSelector,this._cardTitleSelector=n.cardTitleSelector,this._cardImageSelector=n.cardImageSelector,this._cardLikeSelector=n.cardLikeSelector,this._cardLikesCounterSelector=n.cardLikeCounterSelector,this._cardDeleteSelector=n.cardDeleteSelector,this._activeLikeButtonClass=n.activeLikeButtonClass,this._handlePicture=n.openPicture,this._confirm=p,this._addLikeApi=s,this._removeLikeApi=f,this._deleteCardApi=h,this._handleError=d}var t,n;return t=e,n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(this._cardSelector).cloneNode(!0)}},{key:"_addCardEvents",value:function(e){var t=this._element.querySelector(this._cardImageSelector),n=this._element.querySelector(this._cardLikeSelector),r=this._element.querySelector(this._cardDeleteSelector);e?r.addEventListener("click",this._handleCardDelete):r.remove(),t.addEventListener("click",this._handlePicture),n.addEventListener("click",this._handleLikeClick)}},{key:"generateCard",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._element=this._getTemplate(),this._addCardEvents(e),this._element.querySelector(this._cardTitleSelector).textContent=this._name,this._element.querySelector(this._cardLikesCounterSelector).textContent=this._likeCount,this._isliked&&this._element.querySelector(this._cardLikeSelector).classList.add(this._activeLikeButtonClass);var t=this._element.querySelector(this._cardImageSelector);return t.src=this._link,t.alt=this._name,this._element}}],n&&i(t.prototype,n),e}(),u=c,l={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_error",errorClass:"form__input-error_visible"},s="popup_visible",f={cardSelector:".card",cardTemplateSelector:".card__template",cardTitleSelector:".card__title",cardImageSelector:".card__image",cardLikeSelector:".card__like-button",cardLikeCounterSelector:".card__like-counter",cardDeleteSelector:".card__delete-button",activeLikeButtonClass:"card__like-button_active"};function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),d(this,"_handleEscapeClose",(function(e){"Escape"===e.key&&n.close()})),d(this,"_handleOverlayClose",(function(e){e.target.classList.contains(s)&&n.close()})),this._element=document.querySelector(t),this._closeButton=this._element.querySelector(".popup__close-button"),this._handleCloseButton=function(){return n.close()}}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add(s),this.setEventListeners()}},{key:"close",value:function(){this._element.classList.remove(s),this.removeEventListeners()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this._handleCloseButton),this._element.addEventListener("click",this._handleOverlayClose),document.addEventListener("keydown",this._handleEscapeClose)}},{key:"removeEventListeners",value:function(){this._closeButton.removeEventListener("click",this._handleCloseButton),this._element.removeEventListener("click",this._handleOverlayClose),document.removeEventListener("keydown",this._handleEscapeClose)}}])&&h(t.prototype,n),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function v(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return b(e)}function b(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function S(e,t,n){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},S(e,t,n||e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}function k(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=g(t);if(n){var o=g(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return v(this,e)});function o(e,t){var n,i,a,c,u,s=t.handleSubmit,f=t.resetValidation;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),k(b(u=r.call(this,e)),"_setInputValues",(function(e){for(var t=function(){var e,t,o=(e=r[n],t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1],c=u._inputs.find((function(e){return e.name===i}));void 0!==c&&(c.value=a)},n=0,r=Object.entries(e);n<r.length;n++)t()})),k(b(u),"getInputValues",(function(){var e={};return u._inputs.forEach((function(t){e[t.name]=t.value})),e})),k(b(u),"open",(function(e){u.setEventListeners(),u._setInputValues(e),S((n=b(u),g(o.prototype)),"open",n).call(n)})),k(b(u),"close",(function(){u.removeEventListeners(),u._resetValidation(),S((i=b(u),g(o.prototype)),"close",i).call(i),u._form.reset()})),k(b(u),"setEventListeners",(function(){u._form.addEventListener("submit",u._handleSubmit),S((a=b(u),g(o.prototype)),"setEventListeners",a).call(a)})),k(b(u),"removeEventListeners",(function(){u._form.removeEventListener("submit",u._handleSubmit),S((c=b(u),g(o.prototype)),"removeEventListeners",c).call(c)})),k(b(u),"toggleButtonText",(function(){var e=u._button.textContent;u._button.textContent=u._buttonText,u._buttonText=e})),u._handleSubmit=s.bind(b(u)),u._resetValidation=f,u._inputs=Array.from(u._element.querySelectorAll(l.inputSelector)),u._form=u._element.querySelector(l.formSelector),u._button=u._element.querySelector(l.submitButtonSelector),u._buttonText="Saving...",u}return o}(p);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},C(e,t,n||e)}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._title=t._element.querySelector(".popup__picture-title"),t._image=t._element.querySelector(".popup__picture"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._title.textContent=n,this._image.setAttribute("src",t),this._image.setAttribute("alt",n),C(P(a.prototype),"open",this).call(this)}}])&&w(t.prototype,n),a}(p);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function R(e,t){if(t&&("object"===B(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return q(e)}function q(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e,t,n){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},x(e,t,n||e)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}function A(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=D(t);if(n){var o=D(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return R(this,e)});function o(e,t){var n,i,a,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),A(q(c=r.call(this,e)),"open",(function(e,t){c._handleConfirm=function(){return e().then((function(){return c.close()})).catch(t)},x((n=q(c),D(o.prototype)),"open",n).call(n)})),A(q(c),"setEventListeners",(function(){c._buttonElement.addEventListener("click",c._handleConfirm),x((i=q(c),D(o.prototype)),"setEventListeners",i).call(i)})),A(q(c),"removeEventListeners",(function(){c._buttonElement.removeEventListener("click",c._handleConfirm),x((a=q(c),D(o.prototype)),"removeEventListeners",a).call(a)})),c._handleConfirm=function(){return c.close()},c._buttonElement=c._element.querySelector(t),c}return o}(p);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t){var n=t.userNameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._bioElement=document.querySelector(r),this._imageElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,bio:this._bioElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._bioElement.textContent=n}},{key:"setUserAvatar",value:function(e){this._imageElement.src=e}}])&&U(t.prototype,n),e}();function H(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n){var r=t.inputSelector,o=t.submitButtonSelector,i=t.inactiveButtonClass,a=t.inputErrorClass,c=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._inputSelector=r,this._submitButtonSelector=o,this._inactiveButtonClass=i,this._inputErrorClass=a,this._errorClass=c,this._boundHandleInput=this._handleInput.bind(this)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._inputElements=this._form.querySelectorAll(this._inputSelector),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputElements.forEach((function(t){e._hideError(t)})),this._disableButton()}},{key:"_handleInput",value:function(e){this._validateInput(e.target),this._setButtonState()}},{key:"_validateInput",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_hideError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_showError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_setEventListeners",value:function(){var e=this;this._inputElements.forEach((function(t){return t.addEventListener("input",e._boundHandleInput)}))}},{key:"_setButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputElements).some((function(e){return!e.validity.valid}))}},{key:"_disableButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}}])&&z(t.prototype,n),e}();function M(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function $(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?M(Object(n),!0).forEach((function(t){F(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):M(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function F(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var G=new o({host:"https://around.nomoreparties.co/v1/group-12",authorization:"9dcb4203-ec5d-4132-a4af-e260b13cb4d2"});function K(e){console.log("Api had an error: ".concat(e))}var Q=new N({userNameSelector:".profile__name",descriptionSelector:".profile__bio",avatarSelector:".profile__image"}),W=new T(".popup_name_picture"),X=new E(".popup_name_edit-profile",{handleSubmit:function(e){e.preventDefault(),X.toggleButtonText();var t=X.getInputValues(),n=t.name,r=t.bio;G.updateUser({name:n,about:r}).then((function(){Q.setUserInfo({name:n,about:r}),X.close()})).finally(X.toggleButtonText).catch(K)},resetValidation:function(){return oe.resetValidation()}}),Y=new E(".popup_name_new-place",{handleSubmit:function(e){e.preventDefault(),Y.toggleButtonText();var t=Y.getInputValues(),n=t.title,r=t.link;G.addCard({name:n,link:r}).then((function(e){return ce.addItem(e)})).then((function(){Y.close()})).finally(Y.toggleButtonText).catch(K)},resetValidation:function(){return ie.resetValidation()}}),Z=new E(".popup_name_edit-avatar",{handleSubmit:function(e){e.preventDefault(),Z.toggleButtonText();var t=Z.getInputValues().url;G.updateUserAvatar(t).then((function(){Q.setUserAvatar(t),Z.close()})).finally(Z.toggleButtonText).catch(K)},resetValidation:function(){return ae.resetValidation()}}),ee=new V(".popup_name_confirm",".popup__button"),te=document.querySelector(".form_name_edit-profile"),ne=document.querySelector(".form_name_new-place"),re=document.querySelector(".form_name_edit-avatar"),oe=new J(l,te),ie=new J(l,ne),ae=new J(l,re),ce=new function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),H(this,"renderItems",(function(e){e.forEach(r.addItem)})),H(this,"addItem",(function(e){var t=r._renderer(e);r._container.prepend(t)})),this._renderer=t,this._container=document.querySelector(n)}((function(e){var t={addLike:function(){return G.addLike(e._id)},removeLike:function(){return G.removeLike(e._id)},deleteCard:function(){return G.deleteCard(e._id)},handleError:K,confirmDelete:ee.open};return new u($($({},e),{},{liked:e.likes.some((function(e){return e._id===G.userId}))}),$($({},f),{},{openPicture:function(){return W.open(e)}}),t).generateCard(e.owner._id===G.userId)}),".gallery__container");function ue(e){ce.renderItems(e.reverse())}var le=document.querySelector(".profile__edit-button"),se=document.querySelector(".profile__add-button"),fe=document.querySelector(".profile__avatar");le.addEventListener("click",(function(e){e.stopPropagation();var t=Q.getUserInfo(),n=t.name,r=t.bio;X.open({name:n,bio:r})})),se.addEventListener("click",(function(e){e.stopPropagation(),Y.open({})})),fe.addEventListener("click",(function(e){e.stopPropagation(),Z.open({})})),oe.enableValidation(),ie.enableValidation(),ae.enableValidation(),G.getUserInfo().then((function(e){Q.setUserInfo(e),Q.setUserAvatar(e.avatar)})).then((function(){return G.getCards().then(ue)})).catch(K)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,